(()=>{"use strict";var __webpack_modules__={56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('{\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcz9kZGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n\n}')},72:module=>{eval('{\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n\n}')},113:module=>{eval("{\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///113\n\n}")},314:module=>{eval('{\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n\n}')},352:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.gameboard-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(10, 1fr);\r\n    grid-template-rows: repeat(10, 1fr);\r\n    gap: 1px;\r\n    border: 2px solid var(--color-black);\r\n    max-width: 400px;\r\n    aspect-ratio: 1;\r\n}\r\n\r\n.grid-cell {\r\n    background-color: var(--color-white);\r\n    border: 1px solid #ccc;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.grid-cell.miss {\r\n    background-color: lightblue;\r\n}\r\n\r\n/* .grid-cell.sunk {\r\n    border: 1px solid #222 !important;\r\n} */\r\n\r\n.ship-preview {\r\n    opacity: 0.7 !important;\r\n    border: 1px dashed #333;\r\n}\r\n\r\n.ship-preview-invalid {\r\n    background-color: lightgray !important;\r\n    opacity: 0.7;\r\n}\r\n\r\n`, "",{"version":3,"sources":["webpack://./src/modules/gameboard/gameboard.css"],"names":[],"mappings":"AAAA;IACI,aAAa;IACb,sCAAsC;IACtC,mCAAmC;IACnC,QAAQ;IACR,oCAAoC;IACpC,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,oCAAoC;IACpC,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sCAAsC;AAC1C;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;;GAEG;;AAEH;IACI,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,sCAAsC;IACtC,YAAY;AAChB","sourcesContent":[".gameboard-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(10, 1fr);\\r\\n    grid-template-rows: repeat(10, 1fr);\\r\\n    gap: 1px;\\r\\n    border: 2px solid var(--color-black);\\r\\n    max-width: 400px;\\r\\n    aspect-ratio: 1;\\r\\n}\\r\\n\\r\\n.grid-cell {\\r\\n    background-color: var(--color-white);\\r\\n    border: 1px solid #ccc;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    transition: background-color 0.3s ease;\\r\\n}\\r\\n\\r\\n.grid-cell.miss {\\r\\n    background-color: lightblue;\\r\\n}\\r\\n\\r\\n/* .grid-cell.sunk {\\r\\n    border: 1px solid #222 !important;\\r\\n} */\\r\\n\\r\\n.ship-preview {\\r\\n    opacity: 0.7 !important;\\r\\n    border: 1px dashed #333;\\r\\n}\\r\\n\\r\\n.ship-preview-invalid {\\r\\n    background-color: lightgray !important;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNnSDtBQUNqQjtBQUMvRiw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sc0dBQXNHLFVBQVUsWUFBWSxhQUFhLFdBQVcsWUFBWSxhQUFhLFdBQVcsT0FBTyxLQUFLLFlBQVksYUFBYSxXQUFXLFlBQVksYUFBYSxhQUFhLE9BQU8sS0FBSyxZQUFZLE9BQU8sTUFBTSxNQUFNLEtBQUssWUFBWSxhQUFhLE9BQU8sS0FBSyxZQUFZLFdBQVcsMkNBQTJDLHNCQUFzQiwrQ0FBK0MsNENBQTRDLGlCQUFpQiw2Q0FBNkMseUJBQXlCLHdCQUF3QixLQUFLLG9CQUFvQiw2Q0FBNkMsK0JBQStCLHNCQUFzQiw0QkFBNEIsZ0NBQWdDLCtDQUErQyxLQUFLLHlCQUF5QixvQ0FBb0MsS0FBSyw0QkFBNEIsMENBQTBDLE1BQU0seUJBQXlCLGdDQUFnQyxnQ0FBZ0MsS0FBSywrQkFBK0IsK0NBQStDLHFCQUFxQixLQUFLLDJCQUEyQjtBQUN0dUM7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvcC1iYXR0bGVzaGlwLy4vc3JjL21vZHVsZXMvZ2FtZWJvYXJkL2dhbWVib2FyZC5jc3M/MWE1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLmdhbWVib2FyZC1ncmlkIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcclxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEwLCAxZnIpO1xyXG4gICAgZ2FwOiAxcHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1jb2xvci1ibGFjayk7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgYXNwZWN0LXJhdGlvOiAxO1xyXG59XHJcblxyXG4uZ3JpZC1jZWxsIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbi5ncmlkLWNlbGwubWlzcyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XHJcbn1cclxuXHJcbi8qIC5ncmlkLWNlbGwuc3VuayB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjIyICFpbXBvcnRhbnQ7XHJcbn0gKi9cclxuXHJcbi5zaGlwLXByZXZpZXcge1xyXG4gICAgb3BhY2l0eTogMC43ICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXI6IDFweCBkYXNoZWQgIzMzMztcclxufVxyXG5cclxuLnNoaXAtcHJldmlldy1pbnZhbGlkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheSAhaW1wb3J0YW50O1xyXG4gICAgb3BhY2l0eTogMC43O1xyXG59XHJcblxyXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL2dhbWVib2FyZC9nYW1lYm9hcmQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNDQUFzQztJQUN0QyxtQ0FBbUM7SUFDbkMsUUFBUTtJQUNSLG9DQUFvQztJQUNwQyxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyxzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0ksMkJBQTJCO0FBQy9COztBQUVBOztHQUVHOztBQUVIO0lBQ0ksdUJBQXVCO0lBQ3ZCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLHNDQUFzQztJQUN0QyxZQUFZO0FBQ2hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5nYW1lYm9hcmQtZ3JpZCB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMCwgMWZyKTtcXHJcXG4gICAgZ2FwOiAxcHg7XFxyXFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWNvbG9yLWJsYWNrKTtcXHJcXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcXHJcXG4gICAgYXNwZWN0LXJhdGlvOiAxO1xcclxcbn1cXHJcXG5cXHJcXG4uZ3JpZC1jZWxsIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itd2hpdGUpO1xcclxcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XFxyXFxufVxcclxcblxcclxcbi5ncmlkLWNlbGwubWlzcyB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTtcXHJcXG59XFxyXFxuXFxyXFxuLyogLmdyaWQtY2VsbC5zdW5rIHtcXHJcXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzIyMiAhaW1wb3J0YW50O1xcclxcbn0gKi9cXHJcXG5cXHJcXG4uc2hpcC1wcmV2aWV3IHtcXHJcXG4gICAgb3BhY2l0eTogMC43ICFpbXBvcnRhbnQ7XFxyXFxuICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjMzMzO1xcclxcbn1cXHJcXG5cXHJcXG4uc2hpcC1wcmV2aWV3LWludmFsaWQge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXkgIWltcG9ydGFudDtcXHJcXG4gICAgb3BhY2l0eTogMC43O1xcclxcbn1cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///352\n\n}')},354:module=>{eval('{\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///354\n\n}')},366:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzY2LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNnSDtBQUNqQjtBQUMvRiw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsaURBQWlELGtFQUFrRTtBQUNuSDtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLWJhdHRsZXNoaXAvLi9zcmMvbW9kdWxlcy9zaGlwL3NoaXAuY3NzPzZlMjgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W10sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIlwiLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///366\n\n}')},540:module=>{eval('{\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n\n}')},565:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(993);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_variables_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(759);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_modules_game_game_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(798);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_modules_ship_ship_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(366);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_modules_gameboard_gameboard_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(352);\n// Imports\n\n\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .A);\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_variables_css__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .A);\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_modules_game_game_css__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A);\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_modules_ship_ship_css__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .A);\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_modules_gameboard_gameboard_css__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .A);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\nh1 {\r\n    font-family: var(--font-family-primary);\r\n}\r\n\r\nbody, p, span, div {\r\n    font-family: var(--font-family-secondary);\r\n}`, "",{"version":3,"sources":["webpack://./src/styles/base.css"],"names":[],"mappings":"AAIA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,yCAAyC;AAC7C","sourcesContent":["@import \'reset.css\';\\r\\n\\r\\n@import \'variables.css\';\\r\\n\\r\\nbody {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    font-family: var(--font-family-primary);\\r\\n}\\r\\n\\r\\nbody, p, span, div {\\r\\n    font-family: var(--font-family-secondary);\\r\\n}\\r\\n\\r\\n@import \'../modules/game/game.css\';\\r\\n@import \'../modules/ship/ship.css\';\\r\\n@import \'../modules/gameboard/gameboard.css\';"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQzZHO0FBQ2pCO0FBQ1k7QUFDSTtBQUNTO0FBQ0E7QUFDVTtBQUMvSCw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GLDBCQUEwQiwrRkFBaUM7QUFDM0QsMEJBQTBCLG1HQUFpQztBQUMzRCwwQkFBMEIsMkdBQWlDO0FBQzNELDBCQUEwQiwyR0FBaUM7QUFDM0QsMEJBQTBCLHFIQUFpQztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLE9BQU8sc0ZBQXNGLFVBQVUsWUFBWSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssWUFBWSw4Q0FBOEMsZ0NBQWdDLGNBQWMsc0JBQXNCLGdDQUFnQyxLQUFLLFlBQVksZ0RBQWdELEtBQUssNEJBQTRCLGtEQUFrRCxLQUFLLDJDQUEyQyx1Q0FBdUMsaURBQWlELG1CQUFtQjtBQUNybUI7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvcC1iYXR0bGVzaGlwLy4vc3JjL3N0eWxlcy9iYXNlLmNzcz9jMWRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3ZhcmlhYmxlcy5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzJfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbW9kdWxlcy9nYW1lL2dhbWUuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8zX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL21vZHVsZXMvc2hpcC9zaGlwLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNF9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9tb2R1bGVzL2dhbWVib2FyZC9nYW1lYm9hcmQuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMl9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfM19fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG5oMSB7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktcHJpbWFyeSk7XHJcbn1cclxuXHJcbmJvZHksIHAsIHNwYW4sIGRpdiB7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktc2Vjb25kYXJ5KTtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9iYXNlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFJQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSx5Q0FBeUM7QUFDN0NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCAncmVzZXQuY3NzJztcXHJcXG5cXHJcXG5AaW1wb3J0ICd2YXJpYWJsZXMuY3NzJztcXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbmgxIHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LXByaW1hcnkpO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5LCBwLCBzcGFuLCBkaXYge1xcclxcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktc2Vjb25kYXJ5KTtcXHJcXG59XFxyXFxuXFxyXFxuQGltcG9ydCAnLi4vbW9kdWxlcy9nYW1lL2dhbWUuY3NzJztcXHJcXG5AaW1wb3J0ICcuLi9tb2R1bGVzL3NoaXAvc2hpcC5jc3MnO1xcclxcbkBpbXBvcnQgJy4uL21vZHVsZXMvZ2FtZWJvYXJkL2dhbWVib2FyZC5jc3MnO1wiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///565\n\n}')},659:module=>{eval('{\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvcC1iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcz9iMjE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///659\n\n}')},759:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n    /* Color Variables */\r\n    --color-red: #EF476F;\r\n    --color-yellow: #FFD166;\r\n    --color-green: #06D6A0;\r\n    --color-blue-light: #118AB2;\r\n    --color-blue-dark: #073B4C;\r\n    --color-white: #ffffff;\r\n    --color-off-white: #f0f0f0;\r\n    --color-black: #000000;\r\n\r\n    /* Font Variables */\r\n    --font-family-primary: \'Playfair Display\', serif;\r\n    --font-family-secondary: \'Inter\', sans-serif;\r\n    --font-size-xl: 48px;\r\n    --font-size-l: 36px;\r\n    --font-size-m: 24px;\r\n    --font-size-s: 16px;\r\n    --font-size-xs: 14px;\r\n    --font-weight-bold: 700;\r\n    --font-weight-normal: 400;\r\n    --font-weight-light: 300;\r\n    --line-height-base: 1.5;\r\n    --letter-spacing-wide: 0.05rem;\r\n    --letter-spacing-tight: -0.01rem;\r\n\r\n    /* Margins, Paddings Variables */\r\n    --spacing-l: 32px;\r\n    --spacing-m: 24px;\r\n    --spacing-s: 16px;\r\n    --spacing-xs: 8px;\r\n\r\n    /* Interaction / States */\r\n    --transition-fast: all 0.2s ease-in-out;\r\n    --transition-slow: all 0.5s ease-in-out;\r\n    --hover-brightness: 1.2;\r\n    --hover-brightness-dark: 0.9;\r\n\r\n    /* Miscellaneous Variables */\r\n    --border-radius: 8px;\r\n    --box-shadow: 0 3px 6px rgba(0, 0, 0, 0.3);\r\n}`, "",{"version":3,"sources":["webpack://./src/styles/variables.css"],"names":[],"mappings":"AAAA;IACI,oBAAoB;IACpB,oBAAoB;IACpB,uBAAuB;IACvB,sBAAsB;IACtB,2BAA2B;IAC3B,0BAA0B;IAC1B,sBAAsB;IACtB,0BAA0B;IAC1B,sBAAsB;;IAEtB,mBAAmB;IACnB,gDAAgD;IAChD,4CAA4C;IAC5C,oBAAoB;IACpB,mBAAmB;IACnB,mBAAmB;IACnB,mBAAmB;IACnB,oBAAoB;IACpB,uBAAuB;IACvB,yBAAyB;IACzB,wBAAwB;IACxB,uBAAuB;IACvB,8BAA8B;IAC9B,gCAAgC;;IAEhC,gCAAgC;IAChC,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;;IAEjB,yBAAyB;IACzB,uCAAuC;IACvC,uCAAuC;IACvC,uBAAuB;IACvB,4BAA4B;;IAE5B,4BAA4B;IAC5B,oBAAoB;IACpB,0CAA0C;AAC9C","sourcesContent":[":root {\\r\\n    /* Color Variables */\\r\\n    --color-red: #EF476F;\\r\\n    --color-yellow: #FFD166;\\r\\n    --color-green: #06D6A0;\\r\\n    --color-blue-light: #118AB2;\\r\\n    --color-blue-dark: #073B4C;\\r\\n    --color-white: #ffffff;\\r\\n    --color-off-white: #f0f0f0;\\r\\n    --color-black: #000000;\\r\\n\\r\\n    /* Font Variables */\\r\\n    --font-family-primary: \'Playfair Display\', serif;\\r\\n    --font-family-secondary: \'Inter\', sans-serif;\\r\\n    --font-size-xl: 48px;\\r\\n    --font-size-l: 36px;\\r\\n    --font-size-m: 24px;\\r\\n    --font-size-s: 16px;\\r\\n    --font-size-xs: 14px;\\r\\n    --font-weight-bold: 700;\\r\\n    --font-weight-normal: 400;\\r\\n    --font-weight-light: 300;\\r\\n    --line-height-base: 1.5;\\r\\n    --letter-spacing-wide: 0.05rem;\\r\\n    --letter-spacing-tight: -0.01rem;\\r\\n\\r\\n    /* Margins, Paddings Variables */\\r\\n    --spacing-l: 32px;\\r\\n    --spacing-m: 24px;\\r\\n    --spacing-s: 16px;\\r\\n    --spacing-xs: 8px;\\r\\n\\r\\n    /* Interaction / States */\\r\\n    --transition-fast: all 0.2s ease-in-out;\\r\\n    --transition-slow: all 0.5s ease-in-out;\\r\\n    --hover-brightness: 1.2;\\r\\n    --hover-brightness-dark: 0.9;\\r\\n\\r\\n    /* Miscellaneous Variables */\\r\\n    --border-radius: 8px;\\r\\n    --box-shadow: 0 3px 6px rgba(0, 0, 0, 0.3);\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzU5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsT0FBTywyRkFBMkYsWUFBWSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLGNBQWMsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxjQUFjLGFBQWEsYUFBYSxhQUFhLGFBQWEsY0FBYyxhQUFhLGFBQWEsYUFBYSxhQUFhLGNBQWMsYUFBYSxhQUFhLGFBQWEsaUNBQWlDLDBEQUEwRCxnQ0FBZ0MsK0JBQStCLG9DQUFvQyxtQ0FBbUMsK0JBQStCLG1DQUFtQywrQkFBK0IseUZBQXlGLHFEQUFxRCw2QkFBNkIsNEJBQTRCLDRCQUE0Qiw0QkFBNEIsNkJBQTZCLGdDQUFnQyxrQ0FBa0MsaUNBQWlDLGdDQUFnQyx1Q0FBdUMseUNBQXlDLHVFQUF1RSwwQkFBMEIsMEJBQTBCLDBCQUEwQixzRkFBc0YsZ0RBQWdELGdDQUFnQyxxQ0FBcUMsc0VBQXNFLG1EQUFtRCxLQUFLLG1CQUFtQjtBQUM1MUQ7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvcC1iYXR0bGVzaGlwLy4vc3JjL3N0eWxlcy92YXJpYWJsZXMuY3NzP2MzY2YiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290IHtcclxuICAgIC8qIENvbG9yIFZhcmlhYmxlcyAqL1xyXG4gICAgLS1jb2xvci1yZWQ6ICNFRjQ3NkY7XHJcbiAgICAtLWNvbG9yLXllbGxvdzogI0ZGRDE2NjtcclxuICAgIC0tY29sb3ItZ3JlZW46ICMwNkQ2QTA7XHJcbiAgICAtLWNvbG9yLWJsdWUtbGlnaHQ6ICMxMThBQjI7XHJcbiAgICAtLWNvbG9yLWJsdWUtZGFyazogIzA3M0I0QztcclxuICAgIC0tY29sb3Itd2hpdGU6ICNmZmZmZmY7XHJcbiAgICAtLWNvbG9yLW9mZi13aGl0ZTogI2YwZjBmMDtcclxuICAgIC0tY29sb3ItYmxhY2s6ICMwMDAwMDA7XHJcblxyXG4gICAgLyogRm9udCBWYXJpYWJsZXMgKi9cclxuICAgIC0tZm9udC1mYW1pbHktcHJpbWFyeTogJ1BsYXlmYWlyIERpc3BsYXknLCBzZXJpZjtcclxuICAgIC0tZm9udC1mYW1pbHktc2Vjb25kYXJ5OiAnSW50ZXInLCBzYW5zLXNlcmlmO1xyXG4gICAgLS1mb250LXNpemUteGw6IDQ4cHg7XHJcbiAgICAtLWZvbnQtc2l6ZS1sOiAzNnB4O1xyXG4gICAgLS1mb250LXNpemUtbTogMjRweDtcclxuICAgIC0tZm9udC1zaXplLXM6IDE2cHg7XHJcbiAgICAtLWZvbnQtc2l6ZS14czogMTRweDtcclxuICAgIC0tZm9udC13ZWlnaHQtYm9sZDogNzAwO1xyXG4gICAgLS1mb250LXdlaWdodC1ub3JtYWw6IDQwMDtcclxuICAgIC0tZm9udC13ZWlnaHQtbGlnaHQ6IDMwMDtcclxuICAgIC0tbGluZS1oZWlnaHQtYmFzZTogMS41O1xyXG4gICAgLS1sZXR0ZXItc3BhY2luZy13aWRlOiAwLjA1cmVtO1xyXG4gICAgLS1sZXR0ZXItc3BhY2luZy10aWdodDogLTAuMDFyZW07XHJcblxyXG4gICAgLyogTWFyZ2lucywgUGFkZGluZ3MgVmFyaWFibGVzICovXHJcbiAgICAtLXNwYWNpbmctbDogMzJweDtcclxuICAgIC0tc3BhY2luZy1tOiAyNHB4O1xyXG4gICAgLS1zcGFjaW5nLXM6IDE2cHg7XHJcbiAgICAtLXNwYWNpbmcteHM6IDhweDtcclxuXHJcbiAgICAvKiBJbnRlcmFjdGlvbiAvIFN0YXRlcyAqL1xyXG4gICAgLS10cmFuc2l0aW9uLWZhc3Q6IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xyXG4gICAgLS10cmFuc2l0aW9uLXNsb3c6IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xyXG4gICAgLS1ob3Zlci1icmlnaHRuZXNzOiAxLjI7XHJcbiAgICAtLWhvdmVyLWJyaWdodG5lc3MtZGFyazogMC45O1xyXG5cclxuICAgIC8qIE1pc2NlbGxhbmVvdXMgVmFyaWFibGVzICovXHJcbiAgICAtLWJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIC0tYm94LXNoYWRvdzogMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy92YXJpYWJsZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksb0JBQW9CO0lBQ3BCLG9CQUFvQjtJQUNwQix1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQiwwQkFBMEI7SUFDMUIsc0JBQXNCO0lBQ3RCLDBCQUEwQjtJQUMxQixzQkFBc0I7O0lBRXRCLG1CQUFtQjtJQUNuQixnREFBZ0Q7SUFDaEQsNENBQTRDO0lBQzVDLG9CQUFvQjtJQUNwQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtJQUN6Qix3QkFBd0I7SUFDeEIsdUJBQXVCO0lBQ3ZCLDhCQUE4QjtJQUM5QixnQ0FBZ0M7O0lBRWhDLGdDQUFnQztJQUNoQyxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixpQkFBaUI7O0lBRWpCLHlCQUF5QjtJQUN6Qix1Q0FBdUM7SUFDdkMsdUNBQXVDO0lBQ3ZDLHVCQUF1QjtJQUN2Qiw0QkFBNEI7O0lBRTVCLDRCQUE0QjtJQUM1QixvQkFBb0I7SUFDcEIsMENBQTBDO0FBQzlDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXHJcXG4gICAgLyogQ29sb3IgVmFyaWFibGVzICovXFxyXFxuICAgIC0tY29sb3ItcmVkOiAjRUY0NzZGO1xcclxcbiAgICAtLWNvbG9yLXllbGxvdzogI0ZGRDE2NjtcXHJcXG4gICAgLS1jb2xvci1ncmVlbjogIzA2RDZBMDtcXHJcXG4gICAgLS1jb2xvci1ibHVlLWxpZ2h0OiAjMTE4QUIyO1xcclxcbiAgICAtLWNvbG9yLWJsdWUtZGFyazogIzA3M0I0QztcXHJcXG4gICAgLS1jb2xvci13aGl0ZTogI2ZmZmZmZjtcXHJcXG4gICAgLS1jb2xvci1vZmYtd2hpdGU6ICNmMGYwZjA7XFxyXFxuICAgIC0tY29sb3ItYmxhY2s6ICMwMDAwMDA7XFxyXFxuXFxyXFxuICAgIC8qIEZvbnQgVmFyaWFibGVzICovXFxyXFxuICAgIC0tZm9udC1mYW1pbHktcHJpbWFyeTogJ1BsYXlmYWlyIERpc3BsYXknLCBzZXJpZjtcXHJcXG4gICAgLS1mb250LWZhbWlseS1zZWNvbmRhcnk6ICdJbnRlcicsIHNhbnMtc2VyaWY7XFxyXFxuICAgIC0tZm9udC1zaXplLXhsOiA0OHB4O1xcclxcbiAgICAtLWZvbnQtc2l6ZS1sOiAzNnB4O1xcclxcbiAgICAtLWZvbnQtc2l6ZS1tOiAyNHB4O1xcclxcbiAgICAtLWZvbnQtc2l6ZS1zOiAxNnB4O1xcclxcbiAgICAtLWZvbnQtc2l6ZS14czogMTRweDtcXHJcXG4gICAgLS1mb250LXdlaWdodC1ib2xkOiA3MDA7XFxyXFxuICAgIC0tZm9udC13ZWlnaHQtbm9ybWFsOiA0MDA7XFxyXFxuICAgIC0tZm9udC13ZWlnaHQtbGlnaHQ6IDMwMDtcXHJcXG4gICAgLS1saW5lLWhlaWdodC1iYXNlOiAxLjU7XFxyXFxuICAgIC0tbGV0dGVyLXNwYWNpbmctd2lkZTogMC4wNXJlbTtcXHJcXG4gICAgLS1sZXR0ZXItc3BhY2luZy10aWdodDogLTAuMDFyZW07XFxyXFxuXFxyXFxuICAgIC8qIE1hcmdpbnMsIFBhZGRpbmdzIFZhcmlhYmxlcyAqL1xcclxcbiAgICAtLXNwYWNpbmctbDogMzJweDtcXHJcXG4gICAgLS1zcGFjaW5nLW06IDI0cHg7XFxyXFxuICAgIC0tc3BhY2luZy1zOiAxNnB4O1xcclxcbiAgICAtLXNwYWNpbmcteHM6IDhweDtcXHJcXG5cXHJcXG4gICAgLyogSW50ZXJhY3Rpb24gLyBTdGF0ZXMgKi9cXHJcXG4gICAgLS10cmFuc2l0aW9uLWZhc3Q6IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xcclxcbiAgICAtLXRyYW5zaXRpb24tc2xvdzogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XFxyXFxuICAgIC0taG92ZXItYnJpZ2h0bmVzczogMS4yO1xcclxcbiAgICAtLWhvdmVyLWJyaWdodG5lc3MtZGFyazogMC45O1xcclxcblxcclxcbiAgICAvKiBNaXNjZWxsYW5lb3VzIFZhcmlhYmxlcyAqL1xcclxcbiAgICAtLWJvcmRlci1yYWRpdXM6IDhweDtcXHJcXG4gICAgLS1ib3gtc2hhZG93OiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///759\n\n}')},798:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#game-container {\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-template-rows: auto auto 1fr auto;\r\n}\r\n\r\n.game-title {\r\n    grid-column: span 2;\r\n    text-align: center;\r\n    padding: var(--spacing-s);\r\n    font-size: var(--font-size-xl);\r\n    color: var(--color-blue-dark);\r\n    background-color: var(--color-off-white);\r\n}\r\n\r\n.game-title .material-symbols-outlined {\r\n    color: var(--color-red);\r\n    font-size: var(--font-size-l);\r\n}\r\n\r\n.game-header {\r\n    grid-column: span 2;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    padding: var(--spacing-s);\r\n    background-color: var(--color-off-white);\r\n}\r\n\r\n.player-info {\r\n    text-align: center;\r\n}\r\n\r\n.player-info h3 {\r\n    font-size: var(--font-size-m);\r\n    margin: 0 0 var(--spacing-xs) 0;\r\n    color: var(--color-blue-dark);\r\n}\r\n\r\n.score {\r\n    font-size: 1.5em;\r\n    color: var(--color-blue-dark);\r\n}\r\n\r\n.game-status {\r\n    font-size: var(--font-size-s);\r\n    text-align: center;\r\n    padding: var(--spacing-s) var(--spacing-m);\r\n    background-color: var(--color-blue-light);\r\n    color: var(--color-white);\r\n    border-radius: 5px;\r\n}\r\n\r\n.game-boards {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    padding: var(--spacing-l);\r\n    gap: var(--spacing-l);\r\n}\r\n\r\n.board-container {\r\n    text-align: center;\r\n    width: 35%;\r\n    aspect-ratio: 1;\r\n}\r\n\r\n.board-container h4 {\r\n    font-size: var(--font-size-m);\r\n    margin-bottom: var(--spacing-s);\r\n    color: #333;\r\n}\r\n\r\n.game-controls {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: var(--spacing-s);\r\n    text-align: center;\r\n    padding: var(--spacing-m);\r\n}\r\n\r\n.game-controls button {\r\n    margin: 0 var(--spacing-s);\r\n    padding: var(--spacing-xs) var(--spacing-m);\r\n    font-size: 1em;\r\n    background-color: #4a90e2;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n.game-controls button:hover {\r\n    background-color: #357ab8;\r\n}\r\n\r\n.game-controls button:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.game-controls .material-symbols-outlined {\r\n    padding: 0;\r\n    margin: 0;\r\n    vertical-align: middle;\r\n}\r\n.ship-inventory {\r\n    grid-column: span 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    border-top: 2px solid var(--color-off-white);\r\n    padding: var(--spacing-m);\r\n    gap: var(--spacing-s);\r\n    font-size: var(--font-size-s);\r\n}\r\n\r\n#ship-list {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.ship-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 1px solid var(--color-black);\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    padding: 4px var(--spacing-s);\r\n    gap: 2px;\r\n}\r\n\r\n.ship-item:hover {\r\n    background-color: var(--color-off-white);\r\n}\r\n\r\n.ship-item.selected {\r\n    background-color: var(--color-off-white);\r\n}\r\n\r\n.ship-item.placed {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    pointer-events: none;\r\n}\r\n\r\n.ship-boxes {\r\n    display: flex;\r\n    gap: 2px;\r\n}\r\n\r\n.ship-box {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 3px;\r\n}`, "",{"version":3,"sources":["webpack://./src/modules/game/game.css"],"names":[],"mappings":"AAAA;IACI,iBAAiB;IACjB,WAAW;IACX,aAAa;IACb,+BAA+B;IAC/B,sCAAsC;AAC1C;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,yBAAyB;IACzB,8BAA8B;IAC9B,6BAA6B;IAC7B,wCAAwC;AAC5C;;AAEA;IACI,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,yBAAyB;IACzB,wCAAwC;AAC5C;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;IAC7B,+BAA+B;IAC/B,6BAA6B;AACjC;;AAEA;IACI,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,0CAA0C;IAC1C,yCAAyC;IACzC,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,yBAAyB;IACzB,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,6BAA6B;IAC7B,+BAA+B;IAC/B,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,qBAAqB;IACrB,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,0BAA0B;IAC1B,2CAA2C;IAC3C,cAAc;IACd,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,4CAA4C;IAC5C,yBAAyB;IACzB,qBAAqB;IACrB,6BAA6B;AACjC;;AAEA;IACI,WAAW;IACX,aAAa;IACb,eAAe;IACf,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,oCAAoC;IACpC,kBAAkB;IAClB,eAAe;IACf,6BAA6B;IAC7B,QAAQ;AACZ;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB","sourcesContent":["#game-container {\\r\\n    max-width: 1200px;\\r\\n    width: 100%;\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr auto;\\r\\n    grid-template-rows: auto auto 1fr auto;\\r\\n}\\r\\n\\r\\n.game-title {\\r\\n    grid-column: span 2;\\r\\n    text-align: center;\\r\\n    padding: var(--spacing-s);\\r\\n    font-size: var(--font-size-xl);\\r\\n    color: var(--color-blue-dark);\\r\\n    background-color: var(--color-off-white);\\r\\n}\\r\\n\\r\\n.game-title .material-symbols-outlined {\\r\\n    color: var(--color-red);\\r\\n    font-size: var(--font-size-l);\\r\\n}\\r\\n\\r\\n.game-header {\\r\\n    grid-column: span 2;\\r\\n    display: flex;\\r\\n    justify-content: space-evenly;\\r\\n    align-items: center;\\r\\n    padding: var(--spacing-s);\\r\\n    background-color: var(--color-off-white);\\r\\n}\\r\\n\\r\\n.player-info {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.player-info h3 {\\r\\n    font-size: var(--font-size-m);\\r\\n    margin: 0 0 var(--spacing-xs) 0;\\r\\n    color: var(--color-blue-dark);\\r\\n}\\r\\n\\r\\n.score {\\r\\n    font-size: 1.5em;\\r\\n    color: var(--color-blue-dark);\\r\\n}\\r\\n\\r\\n.game-status {\\r\\n    font-size: var(--font-size-s);\\r\\n    text-align: center;\\r\\n    padding: var(--spacing-s) var(--spacing-m);\\r\\n    background-color: var(--color-blue-light);\\r\\n    color: var(--color-white);\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.game-boards {\\r\\n    display: flex;\\r\\n    justify-content: space-evenly;\\r\\n    padding: var(--spacing-l);\\r\\n    gap: var(--spacing-l);\\r\\n}\\r\\n\\r\\n.board-container {\\r\\n    text-align: center;\\r\\n    width: 35%;\\r\\n    aspect-ratio: 1;\\r\\n}\\r\\n\\r\\n.board-container h4 {\\r\\n    font-size: var(--font-size-m);\\r\\n    margin-bottom: var(--spacing-s);\\r\\n    color: #333;\\r\\n}\\r\\n\\r\\n.game-controls {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    gap: var(--spacing-s);\\r\\n    text-align: center;\\r\\n    padding: var(--spacing-m);\\r\\n}\\r\\n\\r\\n.game-controls button {\\r\\n    margin: 0 var(--spacing-s);\\r\\n    padding: var(--spacing-xs) var(--spacing-m);\\r\\n    font-size: 1em;\\r\\n    background-color: #4a90e2;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.game-controls button:hover {\\r\\n    background-color: #357ab8;\\r\\n}\\r\\n\\r\\n.game-controls button:disabled {\\r\\n    background-color: #ccc;\\r\\n    cursor: not-allowed;\\r\\n}\\r\\n\\r\\n.game-controls .material-symbols-outlined {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n.ship-inventory {\\r\\n    grid-column: span 2;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    border-top: 2px solid var(--color-off-white);\\r\\n    padding: var(--spacing-m);\\r\\n    gap: var(--spacing-s);\\r\\n    font-size: var(--font-size-s);\\r\\n}\\r\\n\\r\\n#ship-list {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: space-evenly;\\r\\n}\\r\\n\\r\\n.ship-item {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    border: 1px solid var(--color-black);\\r\\n    border-radius: 5px;\\r\\n    cursor: pointer;\\r\\n    padding: 4px var(--spacing-s);\\r\\n    gap: 2px;\\r\\n}\\r\\n\\r\\n.ship-item:hover {\\r\\n    background-color: var(--color-off-white);\\r\\n}\\r\\n\\r\\n.ship-item.selected {\\r\\n    background-color: var(--color-off-white);\\r\\n}\\r\\n\\r\\n.ship-item.placed {\\r\\n    opacity: 0.5;\\r\\n    cursor: not-allowed;\\r\\n    pointer-events: none;\\r\\n}\\r\\n\\r\\n.ship-boxes {\\r\\n    display: flex;\\r\\n    gap: 2px;\\r\\n}\\r\\n\\r\\n.ship-box {\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    border-radius: 3px;\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNnSDtBQUNqQjtBQUMvRiw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxPQUFPLDRGQUE0RixZQUFZLFdBQVcsVUFBVSxZQUFZLGFBQWEsT0FBTyxLQUFLLFlBQVksYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLE9BQU8sS0FBSyxZQUFZLGFBQWEsT0FBTyxLQUFLLFlBQVksV0FBVyxZQUFZLGFBQWEsYUFBYSxhQUFhLE9BQU8sS0FBSyxZQUFZLE9BQU8sS0FBSyxZQUFZLGFBQWEsYUFBYSxPQUFPLEtBQUssWUFBWSxhQUFhLE9BQU8sS0FBSyxZQUFZLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxPQUFPLEtBQUssVUFBVSxZQUFZLGFBQWEsYUFBYSxPQUFPLEtBQUssWUFBWSxXQUFXLFVBQVUsT0FBTyxLQUFLLFlBQVksYUFBYSxXQUFXLE1BQU0sS0FBSyxVQUFVLFlBQVksYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLE9BQU8sS0FBSyxZQUFZLGFBQWEsV0FBVyxZQUFZLFdBQVcsVUFBVSxZQUFZLFdBQVcsT0FBTyxLQUFLLFlBQVksT0FBTyxLQUFLLFlBQVksYUFBYSxPQUFPLEtBQUssVUFBVSxVQUFVLFlBQVksTUFBTSxLQUFLLFlBQVksV0FBVyxZQUFZLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxPQUFPLEtBQUssVUFBVSxVQUFVLFVBQVUsWUFBWSxPQUFPLEtBQUssVUFBVSxZQUFZLGFBQWEsYUFBYSxhQUFhLGFBQWEsV0FBVyxZQUFZLFdBQVcsTUFBTSxLQUFLLFlBQVksT0FBTyxLQUFLLFlBQVksT0FBTyxLQUFLLFVBQVUsWUFBWSxhQUFhLE9BQU8sS0FBSyxVQUFVLFVBQVUsTUFBTSxLQUFLLFVBQVUsVUFBVSxZQUFZLDJDQUEyQywwQkFBMEIsb0JBQW9CLHNCQUFzQix3Q0FBd0MsK0NBQStDLEtBQUsscUJBQXFCLDRCQUE0QiwyQkFBMkIsa0NBQWtDLHVDQUF1QyxzQ0FBc0MsaURBQWlELEtBQUssZ0RBQWdELGdDQUFnQyxzQ0FBc0MsS0FBSyxzQkFBc0IsNEJBQTRCLHNCQUFzQixzQ0FBc0MsNEJBQTRCLGtDQUFrQyxpREFBaUQsS0FBSyxzQkFBc0IsMkJBQTJCLEtBQUsseUJBQXlCLHNDQUFzQyx3Q0FBd0Msc0NBQXNDLEtBQUssZ0JBQWdCLHlCQUF5QixzQ0FBc0MsS0FBSyxzQkFBc0Isc0NBQXNDLDJCQUEyQixtREFBbUQsa0RBQWtELGtDQUFrQywyQkFBMkIsS0FBSyxzQkFBc0Isc0JBQXNCLHNDQUFzQyxrQ0FBa0MsOEJBQThCLEtBQUssMEJBQTBCLDJCQUEyQixtQkFBbUIsd0JBQXdCLEtBQUssNkJBQTZCLHNDQUFzQyx3Q0FBd0Msb0JBQW9CLEtBQUssd0JBQXdCLHNCQUFzQiwrQkFBK0IsNEJBQTRCLGdDQUFnQyw4QkFBOEIsMkJBQTJCLGtDQUFrQyxLQUFLLCtCQUErQixtQ0FBbUMsb0RBQW9ELHVCQUF1QixrQ0FBa0MscUJBQXFCLHFCQUFxQiwyQkFBMkIsd0JBQXdCLEtBQUsscUNBQXFDLGtDQUFrQyxLQUFLLHdDQUF3QywrQkFBK0IsNEJBQTRCLEtBQUssbURBQW1ELG1CQUFtQixrQkFBa0IsK0JBQStCLEtBQUsscUJBQXFCLDRCQUE0QixzQkFBc0IsK0JBQStCLDRCQUE0QixxREFBcUQsa0NBQWtDLDhCQUE4QixzQ0FBc0MsS0FBSyxvQkFBb0Isb0JBQW9CLHNCQUFzQix3QkFBd0Isc0NBQXNDLEtBQUssb0JBQW9CLHNCQUFzQiwrQkFBK0IsZ0NBQWdDLDRCQUE0Qiw2Q0FBNkMsMkJBQTJCLHdCQUF3QixzQ0FBc0MsaUJBQWlCLEtBQUssMEJBQTBCLGlEQUFpRCxLQUFLLDZCQUE2QixpREFBaUQsS0FBSywyQkFBMkIscUJBQXFCLDRCQUE0Qiw2QkFBNkIsS0FBSyxxQkFBcUIsc0JBQXNCLGlCQUFpQixLQUFLLG1CQUFtQixvQkFBb0IscUJBQXFCLDJCQUEyQixLQUFLLG1CQUFtQjtBQUM5aUs7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvcC1iYXR0bGVzaGlwLy4vc3JjL21vZHVsZXMvZ2FtZS9nYW1lLmNzcz82OTQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAjZ2FtZS1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBhdXRvO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gMWZyIGF1dG87XHJcbn1cclxuXHJcbi5nYW1lLXRpdGxlIHtcclxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiB2YXIoLS1zcGFjaW5nLXMpO1xyXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUteGwpO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLWJsdWUtZGFyayk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1vZmYtd2hpdGUpO1xyXG59XHJcblxyXG4uZ2FtZS10aXRsZSAubWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCB7XHJcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItcmVkKTtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWwpO1xyXG59XHJcblxyXG4uZ2FtZS1oZWFkZXIge1xyXG4gICAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiB2YXIoLS1zcGFjaW5nLXMpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itb2ZmLXdoaXRlKTtcclxufVxyXG5cclxuLnBsYXllci1pbmZvIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnBsYXllci1pbmZvIGgzIHtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLW0pO1xyXG4gICAgbWFyZ2luOiAwIDAgdmFyKC0tc3BhY2luZy14cykgMDtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci1ibHVlLWRhcmspO1xyXG59XHJcblxyXG4uc2NvcmUge1xyXG4gICAgZm9udC1zaXplOiAxLjVlbTtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci1ibHVlLWRhcmspO1xyXG59XHJcblxyXG4uZ2FtZS1zdGF0dXMge1xyXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtcyk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiB2YXIoLS1zcGFjaW5nLXMpIHZhcigtLXNwYWNpbmctbSk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1ibHVlLWxpZ2h0KTtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci13aGl0ZSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5nYW1lLWJvYXJkcyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XHJcbiAgICBwYWRkaW5nOiB2YXIoLS1zcGFjaW5nLWwpO1xyXG4gICAgZ2FwOiB2YXIoLS1zcGFjaW5nLWwpO1xyXG59XHJcblxyXG4uYm9hcmQtY29udGFpbmVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAzNSU7XHJcbiAgICBhc3BlY3QtcmF0aW86IDE7XHJcbn1cclxuXHJcbi5ib2FyZC1jb250YWluZXIgaDQge1xyXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtbSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1zcGFjaW5nLXMpO1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbn1cclxuXHJcbi5nYW1lLWNvbnRyb2xzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgZ2FwOiB2YXIoLS1zcGFjaW5nLXMpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2luZy1tKTtcclxufVxyXG5cclxuLmdhbWUtY29udHJvbHMgYnV0dG9uIHtcclxuICAgIG1hcmdpbjogMCB2YXIoLS1zcGFjaW5nLXMpO1xyXG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2luZy14cykgdmFyKC0tc3BhY2luZy1tKTtcclxuICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRhOTBlMjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmdhbWUtY29udHJvbHMgYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNTdhYjg7XHJcbn1cclxuXHJcbi5nYW1lLWNvbnRyb2xzIGJ1dHRvbjpkaXNhYmxlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxufVxyXG5cclxuLmdhbWUtY29udHJvbHMgLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuLnNoaXAtaW52ZW50b3J5IHtcclxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgdmFyKC0tY29sb3Itb2ZmLXdoaXRlKTtcclxuICAgIHBhZGRpbmc6IHZhcigtLXNwYWNpbmctbSk7XHJcbiAgICBnYXA6IHZhcigtLXNwYWNpbmctcyk7XHJcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1zKTtcclxufVxyXG5cclxuI3NoaXAtbGlzdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxufVxyXG5cclxuLnNoaXAtaXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLWJsYWNrKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHBhZGRpbmc6IDRweCB2YXIoLS1zcGFjaW5nLXMpO1xyXG4gICAgZ2FwOiAycHg7XHJcbn1cclxuXHJcbi5zaGlwLWl0ZW06aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itb2ZmLXdoaXRlKTtcclxufVxyXG5cclxuLnNoaXAtaXRlbS5zZWxlY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1vZmYtd2hpdGUpO1xyXG59XHJcblxyXG4uc2hpcC1pdGVtLnBsYWNlZCB7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn1cclxuXHJcbi5zaGlwLWJveGVzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBnYXA6IDJweDtcclxufVxyXG5cclxuLnNoaXAtYm94IHtcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9nYW1lL2dhbWUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxhQUFhO0lBQ2IsK0JBQStCO0lBQy9CLHNDQUFzQztBQUMxQzs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLDhCQUE4QjtJQUM5Qiw2QkFBNkI7SUFDN0Isd0NBQXdDO0FBQzVDOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsd0NBQXdDO0FBQzVDOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLCtCQUErQjtJQUMvQiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLGtCQUFrQjtJQUNsQiwwQ0FBMEM7SUFDMUMseUNBQXlDO0lBQ3pDLHlCQUF5QjtJQUN6QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLHlCQUF5QjtJQUN6QixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0IsK0JBQStCO0lBQy9CLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLDBCQUEwQjtJQUMxQiwyQ0FBMkM7SUFDM0MsY0FBYztJQUNkLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFVBQVU7SUFDVixTQUFTO0lBQ1Qsc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsNENBQTRDO0lBQzVDLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixlQUFlO0lBQ2YsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLG9DQUFvQztJQUNwQyxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLDZCQUE2QjtJQUM3QixRQUFRO0FBQ1o7O0FBRUE7SUFDSSx3Q0FBd0M7QUFDNUM7O0FBRUE7SUFDSSx3Q0FBd0M7QUFDNUM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixRQUFRO0FBQ1o7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtBQUN0QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjZ2FtZS1jb250YWluZXIge1xcclxcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIGF1dG87XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvIDFmciBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS10aXRsZSB7XFxyXFxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2luZy1zKTtcXHJcXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUteGwpO1xcclxcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItYmx1ZS1kYXJrKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itb2ZmLXdoaXRlKTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtdGl0bGUgLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xcclxcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItcmVkKTtcXHJcXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtbCk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWhlYWRlciB7XFxyXFxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nOiB2YXIoLS1zcGFjaW5nLXMpO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1vZmYtd2hpdGUpO1xcclxcbn1cXHJcXG5cXHJcXG4ucGxheWVyLWluZm8ge1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5wbGF5ZXItaW5mbyBoMyB7XFxyXFxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLW0pO1xcclxcbiAgICBtYXJnaW46IDAgMCB2YXIoLS1zcGFjaW5nLXhzKSAwO1xcclxcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItYmx1ZS1kYXJrKTtcXHJcXG59XFxyXFxuXFxyXFxuLnNjb3JlIHtcXHJcXG4gICAgZm9udC1zaXplOiAxLjVlbTtcXHJcXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLWJsdWUtZGFyayk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLXN0YXR1cyB7XFxyXFxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLXMpO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IHZhcigtLXNwYWNpbmctcykgdmFyKC0tc3BhY2luZy1tKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmx1ZS1saWdodCk7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci13aGl0ZSk7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYm9hcmRzIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxyXFxuICAgIHBhZGRpbmc6IHZhcigtLXNwYWNpbmctbCk7XFxyXFxuICAgIGdhcDogdmFyKC0tc3BhY2luZy1sKTtcXHJcXG59XFxyXFxuXFxyXFxuLmJvYXJkLWNvbnRhaW5lciB7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgd2lkdGg6IDM1JTtcXHJcXG4gICAgYXNwZWN0LXJhdGlvOiAxO1xcclxcbn1cXHJcXG5cXHJcXG4uYm9hcmQtY29udGFpbmVyIGg0IHtcXHJcXG4gICAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtbSk7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLXNwYWNpbmctcyk7XFxyXFxuICAgIGNvbG9yOiAjMzMzO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1jb250cm9scyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBnYXA6IHZhcigtLXNwYWNpbmctcyk7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2luZy1tKTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtY29udHJvbHMgYnV0dG9uIHtcXHJcXG4gICAgbWFyZ2luOiAwIHZhcigtLXNwYWNpbmctcyk7XFxyXFxuICAgIHBhZGRpbmc6IHZhcigtLXNwYWNpbmcteHMpIHZhcigtLXNwYWNpbmctbSk7XFxyXFxuICAgIGZvbnQtc2l6ZTogMWVtO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGE5MGUyO1xcclxcbiAgICBjb2xvcjogd2hpdGU7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWNvbnRyb2xzIGJ1dHRvbjpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNTdhYjg7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWNvbnRyb2xzIGJ1dHRvbjpkaXNhYmxlZCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XFxyXFxuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWNvbnRyb2xzIC5tYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkIHtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcclxcbn1cXHJcXG4uc2hpcC1pbnZlbnRvcnkge1xcclxcbiAgICBncmlkLWNvbHVtbjogc3BhbiAyO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgdmFyKC0tY29sb3Itb2ZmLXdoaXRlKTtcXHJcXG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2luZy1tKTtcXHJcXG4gICAgZ2FwOiB2YXIoLS1zcGFjaW5nLXMpO1xcclxcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1zKTtcXHJcXG59XFxyXFxuXFxyXFxuI3NoaXAtbGlzdCB7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcclxcbn1cXHJcXG5cXHJcXG4uc2hpcC1pdGVtIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLWJsYWNrKTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHBhZGRpbmc6IDRweCB2YXIoLS1zcGFjaW5nLXMpO1xcclxcbiAgICBnYXA6IDJweDtcXHJcXG59XFxyXFxuXFxyXFxuLnNoaXAtaXRlbTpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLW9mZi13aGl0ZSk7XFxyXFxufVxcclxcblxcclxcbi5zaGlwLWl0ZW0uc2VsZWN0ZWQge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1vZmYtd2hpdGUpO1xcclxcbn1cXHJcXG5cXHJcXG4uc2hpcC1pdGVtLnBsYWNlZCB7XFxyXFxuICAgIG9wYWNpdHk6IDAuNTtcXHJcXG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXHJcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbi5zaGlwLWJveGVzIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZ2FwOiAycHg7XFxyXFxufVxcclxcblxcclxcbi5zaGlwLWJveCB7XFxyXFxuICAgIHdpZHRoOiAzMHB4O1xcclxcbiAgICBoZWlnaHQ6IDMwcHg7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///798\n\n}')},825:module=>{eval('{\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///825\n\n}')},871:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("{\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/styles/base.css\nvar base = __webpack_require__(565);\n;// ./src/styles/base.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, \"head\");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(base/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const styles_base = (base/* default */.A && base/* default */.A.locals ? base/* default */.A.locals : undefined);\n\n;// ./src/modules/gameboard/gameboard.js\n/**\r\n * Creates a gameboard object with grid management, ship placement, and attack handling capabilities\r\n * @function Gameboard\r\n * @returns {Object} Gameboard object with grid management and DOM manipulation methods\r\n * \r\n * @example\r\n * const playerBoard = Gameboard();\r\n * const ship = Ship('destroyer');\r\n * playerBoard.placeShip(ship, 0, 0, 'horizontal');\r\n * \r\n * @example\r\n * const result = computerBoard.receiveAttack(5, 5);\r\n * if (result === 'hit') {\r\n *   console.log('Ship hit!');\r\n * }\r\n */\nfunction Gameboard() {\n  var _this = this;\n  //==============================================\n  // CONSTANTS & PRIVATE STATE\n  //==============================================\n  var GRID_SIZE = 10;\n\n  // Private state\n  var grid = Array(GRID_SIZE).fill(null).map(function () {\n    return Array(GRID_SIZE).fill(null);\n  });\n  var attackedCoordinates = new Set();\n  var ships = [];\n\n  //==============================================\n  // DOM STATE\n  //==============================================\n  var gridElement = null;\n  var isPlayerBoard = false;\n\n  // Helper functions\n  var isValidCoordinate = function isValidCoordinate(x, y) {\n    return x >= 0 && x < GRID_SIZE && y >= 0 && y < GRID_SIZE;\n  };\n  var coordinateKey = function coordinateKey(x, y) {\n    return \"\".concat(x, \",\").concat(y);\n  };\n\n  //==============================================\n  // GRID STATE METHODS\n  //==============================================\n\n  // Gets the size of the game grid\n  var getGridSize = function getGridSize() {\n    return GRID_SIZE;\n  };\n\n  // Gets the ship at specified coordinates\n  var getShipAt = function getShipAt(x, y) {\n    if (!isValidCoordinate(x, y)) return null;\n    return grid[x][y];\n  };\n\n  // Checks if coordinates have been attacked\n  var isAttacked = function isAttacked(x, y) {\n    return attackedCoordinates.has(coordinateKey(x, y));\n  };\n\n  //==============================================\n  // SHIP PLACEMENT METHODS\n  //==============================================\n\n  /**\r\n   * Places a ship on the gameboard at specified coordinates\r\n   * @method placeShip\r\n   * @param {Object} ship - Ship object to place\r\n   * @param {number} x - Starting X coordinate\r\n   * @param {number} y - Starting Y coordinate\r\n   * @param {string} orientation - Ship orientation ('horizontal' or 'vertical')\r\n   * @throws {Error} When ship placement is invalid (out of bounds or overlapping)\r\n   * \r\n   * @example\r\n   * const ship = Ship('carrier');\r\n   * gameboard.placeShip(ship, 0, 0, 'horizontal');\r\n   * \r\n   * @example\r\n   * try {\r\n   *   gameboard.placeShip(ship, 9, 9, 'horizontal'); // Will throw error\r\n   * } catch (error) {\r\n   *   console.log('Invalid placement:', error.message);\r\n   * }\r\n   */\n  var placeShip = function placeShip(ship, x, y, orientation) {\n    // Validate bounds\n    if (orientation === 'horizontal') {\n      if (y + ship.length > GRID_SIZE) throw new Error('Ship placement out of bounds');\n    } else if (orientation === 'vertical') {\n      if (x + ship.length > GRID_SIZE) throw new Error('Ship placement out of bounds');\n    }\n\n    // Check for overlapping ships    \n    for (var i = 0; i < ship.length; i++) {\n      var checkX = orientation === 'vertical' ? x + i : x;\n      var checkY = orientation === 'horizontal' ? y + i : y;\n      if (grid[checkX][checkY] !== null) throw new Error('Ships cannot overlap');\n    }\n\n    // Place the ship\n    for (var _i = 0; _i < ship.length; _i++) {\n      var placeX = orientation === 'vertical' ? x + _i : x;\n      var placeY = orientation === 'horizontal' ? y + _i : y;\n      grid[placeX][placeY] = ship;\n    }\n\n    // Add ship to the ships array for tracking\n    ships.push(ship);\n  };\n\n  //==============================================\n  // ATTACK COORDINATION METHODS\n  //==============================================\n\n  /**\r\n   * Processes an attack on the gameboard\r\n   * @method receiveAttack\r\n   * @param {number} x - X coordinate to attack\r\n   * @param {number} y - Y coordinate to attack\r\n   * @returns {string} Attack result ('hit', 'miss', 'sunk', 'already attacked')\r\n   * @throws {Error} When attack coordinates are out of bounds\r\n   * \r\n   * @example\r\n   * const result = gameboard.receiveAttack(5, 5);\r\n   * switch (result) {\r\n   *   case 'hit': console.log('Ship hit!'); break;\r\n   *   case 'miss': console.log('Missed!'); break;\r\n   *   case 'sunk': console.log('Ship sunk!'); break;\r\n   * }\r\n   */\n  var receiveAttack = function receiveAttack(x, y) {\n    // Validate bounds\n    if (!isValidCoordinate(x, y)) throw new Error('Attack coordinates out of bounds');\n\n    // Check for duplicate attack\n    var coordKey = coordinateKey(x, y);\n    if (attackedCoordinates.has(coordKey)) return 'already attacked';\n\n    // Mark as attacked\n    attackedCoordinates.add(coordKey);\n\n    // Check if hit\n    var ship = grid[x][y];\n    if (ship === null) {\n      updateDisplay();\n      return 'miss';\n    }\n\n    // Hit the ship\n    ship.hit();\n    updateDisplay();\n\n    // Check if sunk\n    if (ship.isSunk()) return 'sunk';\n    return 'hit';\n  };\n\n  //==============================================\n  // GAME STATE METHODS\n  //==============================================\n\n  // Checks if all ships on the board have been sunk\n  var allShipsSunk = function allShipsSunk() {\n    return ships.length > 0 && ships.every(function (ship) {\n      return ship.isSunk();\n    });\n  };\n\n  // Resets the gameboard to initial state\n  var resetBoard = function resetBoard() {\n    for (var row = 0; row < GRID_SIZE; row++) {\n      for (var col = 0; col < GRID_SIZE; col++) {\n        grid[row][col] = null;\n      }\n    }\n    attackedCoordinates.clear();\n    ships.length = 0;\n    updateDisplay();\n  };\n\n  //==============================================\n  // DOM CREATION METHODS\n  //==============================================\n\n  /**\r\n   * Creates and renders the gameboard grid in the specified container\r\n   * @method createGrid\r\n   * @param {string} containerID - ID of the container element\r\n   * @param {boolean} [playerBoard=false] - Whether this is a player board\r\n   * @returns {HTMLElement} The created grid element\r\n   * @throws {Error} When container is not found\r\n   * \r\n   * @example\r\n   * const gridElement = gameboard.createGrid('player-board-container', true);\r\n   */\n  var createGrid = function createGrid(containerID) {\n    var playerBoard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    isPlayerBoard = playerBoard;\n    var container = document.getElementById(containerID);\n    if (!container) throw new Error(\"Container \".concat(containerID, \" not found\"));\n    gridElement = document.createElement('div');\n    gridElement.classList.add('gameboard-grid');\n\n    // Create 10x10 grid cells\n    for (var row = 0; row < GRID_SIZE; row++) {\n      for (var col = 0; col < GRID_SIZE; col++) {\n        var cell = document.createElement('div');\n        cell.classList.add('grid-cell');\n        cell.dataset.row = row;\n        cell.dataset.col = col;\n        if (!playerBoard) cell.addEventListener('click', handleCellClick);else {\n          cell.addEventListener('click', handleShipPlacement);\n          cell.addEventListener('mouseenter', handleCellHover);\n          cell.addEventListener('mouseleave', handleCellLeave);\n        }\n        gridElement.appendChild(cell);\n      }\n    }\n    container.appendChild(gridElement);\n    updateDisplay();\n    return gridElement;\n  };\n\n  // Gets a specific cell element from the grid\n  var getCellElement = function getCellElement(row, col) {\n    if (!gridElement) return null;\n    return gridElement.querySelector(\"[data-row=\\\"\".concat(row, \"\\\"][data-col=\\\"\").concat(col, \"\\\"]\"));\n  };\n\n  //==============================================\n  // DOM EVENT HANDLERS\n  //==============================================\n\n  // Handles ship placement clicks on player board\n  var handleShipPlacement = function handleShipPlacement(event) {\n    var row = parseInt(event.target.dataset.row);\n    var col = parseInt(event.target.dataset.col);\n    var placementEvent = new CustomEvent('shipPlacement', {\n      detail: {\n        row: row,\n        col: col,\n        gameboard: getGameboardReference(),\n        boardElement: gridElement\n      }\n    });\n    document.dispatchEvent(placementEvent);\n  };\n\n  // Handles cell hover events for ship placement preview\n  var handleCellHover = function handleCellHover(event) {\n    var row = parseInt(event.target.dataset.row);\n    var col = parseInt(event.target.dataset.col);\n    var hoverEvent = new CustomEvent('boardHover', {\n      detail: {\n        row: row,\n        col: col,\n        gameboard: getGameboardReference(),\n        boardElement: gridElement\n      }\n    });\n    document.dispatchEvent(hoverEvent);\n  };\n\n  // Handles cell leave events for ship placement preview\n  var handleCellLeave = function handleCellLeave(event) {\n    var row = parseInt(event.target.dataset.row);\n    var col = parseInt(event.target.dataset.col);\n    var leaveEvent = new CustomEvent('boardLeave', {\n      detail: {\n        row: row,\n        col: col,\n        gameboard: getGameboardReference(),\n        boardElement: gridElement\n      }\n    });\n    document.dispatchEvent(leaveEvent);\n  };\n\n  // Handles attack clicks on opponent board\n  var handleCellClick = function handleCellClick(event) {\n    var row = parseInt(event.target.dataset.row);\n    var col = parseInt(event.target.dataset.col);\n\n    // Prevent attack if cell is already attacked\n    if (isAttacked(row, col)) return;\n\n    // Emit custom event for attack\n    var attackEvent = new CustomEvent('boardAttack', {\n      detail: {\n        row: row,\n        col: col,\n        board: _this\n      }\n    });\n    document.dispatchEvent(attackEvent);\n  };\n\n  // Gets a reference object for external use\n  var getGameboardReference = function getGameboardReference() {\n    return {\n      getGridSize: getGridSize,\n      getShipAt: getShipAt,\n      placeShip: placeShip,\n      receiveAttack: receiveAttack,\n      allShipsSunk: allShipsSunk,\n      isAttacked: isAttacked\n    };\n  };\n\n  //==============================================\n  // DOM MANIPULATION METHODS\n  //==============================================\n\n  /**\r\n   * Updates the visual display of the gameboard\r\n   * @method updateDisplay\r\n   * @returns {void}\r\n   * \r\n   * @example\r\n   * gameboard.updateDisplay(); // Refreshes grid appearance\r\n   */\n  var updateDisplay = function updateDisplay() {\n    if (!gridElement) return;\n    for (var row = 0; row < GRID_SIZE; row++) {\n      for (var col = 0; col < GRID_SIZE; col++) {\n        var cell = getCellElement(row, col);\n        if (!cell) continue;\n\n        // Clear previous content\n        cell.classList.add('grid-cell');\n        cell.style.backgroundColor = '';\n        cell.innerHTML = '';\n        var ship = grid[row][col];\n        var attacked = isAttacked(row, col);\n\n        // Show ships on player board\n        if (isPlayerBoard && ship) {\n          cell.classList.add('has-ship');\n          cell.style.backgroundColor = ship.color;\n        }\n        if (attacked) {\n          if (ship) {\n            cell.classList.add('hit');\n            if (!isPlayerBoard) cell.style.backgroundColor = ship.color;\n            if (ship.isSunk()) {\n              cell.classList.add('sunk');\n              cell.innerHTML = '<span class=\"material-symbols-outlined\">mode_heat</span>';\n            } else cell.innerHTML = '<span class=\"material-symbols-outlined\">close_small</span>';\n          } else cell.classList.add('miss');\n        } else {\n          if (!isPlayerBoard) cell.style.backgroundColor = '';\n        }\n      }\n    }\n  };\n\n  /**\r\n   * Highlights a specific cell with a CSS class temporarily\r\n   * @method highlightCell\r\n   * @param {number} row - Row index\r\n   * @param {number} col - Column index\r\n   * @param {string} className - CSS class to apply\r\n   * @returns {void}\r\n   * \r\n   * @example\r\n   * gameboard.highlightCell(5, 5, 'highlight-hit');\r\n   */\n  var highlightCell = function highlightCell(row, col, className) {\n    var cell = getCellElement(row, col);\n    if (cell) {\n      cell.classList.add(className);\n      setTimeout(function () {\n        return cell.classList.remove(className);\n      }, 1000);\n    }\n  };\n\n  // Shows ship placement on player board\n  var showShipPlacement = function showShipPlacement() {\n    if (isPlayerBoard) updateDisplay();\n  };\n\n  /**\r\n   * Sets the board interaction mode\r\n   * @method setBoardMode\r\n   * @param {string} mode - Board mode ('placement' or 'attack')\r\n   * @returns {void}\r\n   * \r\n   * @example\r\n   * gameboard.setBoardMode('attack'); // Switch to attack mode\r\n   */\n  var setBoardMode = function setBoardMode(mode) {\n    if (!gridElement) return;\n\n    // Remove all existing event listeners\n    gridElement.querySelectorAll('.grid-cell').forEach(function (cell) {\n      // Clone node to remove all event listeners\n      var newCell = cell.cloneNode(true);\n      cell.parentNode.replaceChild(newCell, cell);\n    });\n\n    // Add appropriate event listeners based on mode\n    gridElement.querySelectorAll('.grid-cell').forEach(function (cell) {\n      if (mode === 'placement' && isPlayerBoard) {\n        cell.addEventListener('click', handleShipPlacement);\n        cell.addEventListener('mouseenter', handleCellHover);\n        cell.addEventListener('mouseleave', handleCellLeave);\n      } else if (mode === 'attack' && !isPlayerBoard) {\n        cell.addEventListener('click', handleCellClick);\n      }\n    });\n  };\n\n  //==============================================\n  // BOARD CONTROL METHODS\n  //==============================================\n\n  // Enables board interactions\n  var enableBoard = function enableBoard() {\n    if (!gridElement) return;\n    gridElement.classList.remove('disabled');\n    gridElement.querySelectorAll('.grid-cell').forEach(function (cell) {\n      cell.style.pointerEvents = 'auto';\n    });\n  };\n\n  // Disables board interactions\n  var disableBoard = function disableBoard() {\n    if (!gridElement) return;\n    gridElement.classList.add('disabled');\n    gridElement.querySelectorAll('.grid-cell').forEach(function (cell) {\n      cell.style.pointerEvents = 'none';\n    });\n  };\n\n  // Return the public API\n  return {\n    getGridSize: getGridSize,\n    getShipAt: getShipAt,\n    placeShip: placeShip,\n    receiveAttack: receiveAttack,\n    allShipsSunk: allShipsSunk,\n    isAttacked: isAttacked,\n    createGrid: createGrid,\n    updateDisplay: updateDisplay,\n    highlightCell: highlightCell,\n    showShipPlacement: showShipPlacement,\n    resetBoard: resetBoard,\n    enableBoard: enableBoard,\n    disableBoard: disableBoard,\n    setBoardMode: setBoardMode\n  };\n}\n;// ./src/utils/constants.js\nvar SHIP_TYPES = {\n  carrier: {\n    name: 'Carrier',\n    length: 5,\n    color: 'var(--color-red)'\n  },\n  battleship: {\n    name: 'Battleship',\n    length: 4,\n    color: 'var(--color-yellow)'\n  },\n  cruiser: {\n    name: 'Cruiser',\n    length: 3,\n    color: 'var(--color-green)'\n  },\n  submarine: {\n    name: 'Submarine',\n    length: 3,\n    color: 'var(--color-blue-light)'\n  },\n  destroyer: {\n    name: 'Destroyer',\n    length: 2,\n    color: 'var(--color-blue-dark)'\n  }\n};\n;// ./src/modules/ship/ship.js\n\n\n/**\r\n * Creates a ship object with specified type and properties\r\n * @function Ship\r\n * @param {string} typeKey - The ship type key (carrier, battleship, cruiser, submarine, destroyer)\r\n * @returns {Object} Immutable ship object with methods and properties\r\n * @throws {Error} When typeKey is invalid or empty\r\n * \r\n * @example\r\n * const carrier = Ship('carrier');\r\n * console.log(carrier.length); // 5\r\n * console.log(carrier.name); // 'Carrier'\r\n * \r\n * @example\r\n * const destroyer = Ship('destroyer');\r\n * destroyer.hit();\r\n * destroyer.hit();\r\n * console.log(destroyer.isSunk()); // true (destroyer length is 2)\r\n */\nfunction Ship(typeKey) {\n  var type = SHIP_TYPES[typeKey];\n  if (!type) throw new Error(\"Invalid ship type: \".concat(typeKey));\n  var length = type.length;\n\n  // Private state\n  var hits = 0;\n\n  // Public methods\n  // hit\n  var hit = function hit() {\n    if (hits < length) hits++;\n  };\n\n  // isSunk\n  var isSunk = function isSunk() {\n    return hits >= length;\n  };\n\n  // getHits\n  var getHits = function getHits() {\n    return hits;\n  };\n\n  // Return the public API\n  return Object.freeze({\n    // Ship identity properties\n    type: typeKey,\n    name: type.name,\n    color: type.color,\n    length: length,\n    // Ship behavior methods\n    hit: hit,\n    isSunk: isSunk,\n    getHits: getHits\n  });\n}\n;// ./src/modules/game/game.js\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n/**\r\n * Creates a complete Battleship game with two players, gameboards, and full UI management\r\n * @function Game\r\n * @param {Object} player1 - First player object (typically human)\r\n * @param {Object} player2 - Second player object (typically computer)\r\n * @returns {Object} Game object with gameplay methods and UI controls\r\n * @throws {Error} When players are invalid or missing\r\n * \r\n * @example\r\n * const humanPlayer = Player('John', 'human');\r\n * const computerPlayer = Player('AI', 'computer');\r\n * const game = Game(humanPlayer, computerPlayer);\r\n * game.initializeGameUI('game-container');\r\n * \r\n * @example\r\n * game.startGame();\r\n * const result = game.makeGameAttack(5, 5);\r\n * console.log('Attack result:', result);\r\n */\nfunction Game(player1, player2) {\n  //==============================================\n  // INPUT VALIDATION\n  //==============================================\n  if (!player1 || !player2) throw new Error('Two players are required');\n\n  //==============================================\n  // GAME STATE\n  //==============================================\n  var currentPlayer = player1;\n  var gameState = 'not playing'; // 'not playing', 'playing'\n  var winner = null;\n  var turnCount = 0;\n\n  //==============================================\n  // GAME BOARDS\n  //==============================================\n  var player1Board = Gameboard();\n  var player2Board = Gameboard();\n\n  //==============================================\n  // SHIP PLACEMENT STATE\n  //==============================================\n  var selectedShip = null;\n  var currentOrientation = 'horizontal';\n  var isPlacingShip = false;\n\n  //==============================================\n  // DOM REFERENCES\n  //==============================================\n  var gameContainer = null;\n  var statusElement = null;\n  var player1ScoreElement = null;\n  var player2ScoreElement = null;\n\n  //==============================================\n  // PLAYER ACCESS METHODS\n  //==============================================\n  var getPlayer1 = function getPlayer1() {\n    return player1;\n  };\n  var getPlayer2 = function getPlayer2() {\n    return player2;\n  };\n  var getPlayer1Board = function getPlayer1Board() {\n    return player1Board;\n  };\n  var getPlayer2Board = function getPlayer2Board() {\n    return player2Board;\n  };\n\n  //==============================================\n  // GAME STATE METHODS\n  //==============================================\n  var getGameState = function getGameState() {\n    return {\n      currentPlayer: currentPlayer,\n      gameState: gameState,\n      winner: winner,\n      player1Score: player1.score,\n      player2Score: player2.score,\n      turnCount: turnCount\n    };\n  };\n\n  //==============================================\n  // TURN MANAGEMENT METHODS\n  //==============================================\n\n  // Switches the active player and increments turn counter\n  var switchTurns = function switchTurns() {\n    currentPlayer = currentPlayer === player1 ? player2 : player1;\n    turnCount++;\n  };\n\n  // Checks if either player has won the game\n  var checkWinCondition = function checkWinCondition() {\n    if (player1Board.allShipsSunk()) {\n      gameState = 'not playing';\n      winner = player2;\n    } else if (player2Board.allShipsSunk()) {\n      gameState = 'not playing';\n      winner = player1;\n    }\n  };\n\n  //==============================================\n  // GAME SETUP METHODS\n  //==============================================\n\n  /**\r\n   * Checks if all required ships have been placed for game start\r\n   * @private\r\n   * @returns {boolean} True if all ships are placed\r\n   */\n  var areAllShipsPlaced = function areAllShipsPlaced() {\n    var requiredShips = Object.keys(SHIP_TYPES);\n    var placedShips = document.querySelectorAll('.ship-item.placed');\n    return placedShips.length === requiredShips.length;\n  };\n\n  /**\r\n   * Starts the game if all ships are placed\r\n   * @method startGame\r\n   * @returns {void}\r\n   * @throws {Error} When ships are not properly placed\r\n   * \r\n   * @example\r\n   * game.startGame();\r\n   */\n  var startGame = function startGame() {\n    if (!areAllShipsPlaced()) {\n      updateStatusDisplay('Please place all ships before starting the game');\n      return;\n    }\n    gameState = 'playing';\n    currentPlayer = player1; // Player 1 starts\n    initializeComputerShips(); // Place computer ships if player2 is a computer\n    updateStatusDisplay();\n    updateScoreDisplay();\n    updateBoardInteractivity();\n  };\n\n  // Initializes computer player's ships with random placement\n  var initializeComputerShips = function initializeComputerShips() {\n    player2Board.resetBoard();\n    placeShipsRandomly(player2Board);\n    console.log('Computer ships placed randomly');\n  };\n\n  /**\r\n   * Resets the entire game to initial state\r\n   * @method resetGame\r\n   * @returns {void}\r\n   * \r\n   * @example\r\n   * game.resetGame(); // Clears all ships, scores, and resets UI\r\n   */\n  var resetGame = function resetGame() {\n    // Reset game state\n    gameState = 'not playing';\n    winner = null;\n    currentPlayer = player1;\n    turnCount = 0;\n\n    // Reset gameboards\n    if (player1Board.resetBoard) player1Board.resetBoard();\n    if (player2Board.resetBoard) player2Board.resetBoard();\n\n    // Reset ship placement state\n    selectedShip = null;\n    isPlacingShip = false;\n    currentOrientation = 'horizontal';\n\n    // Reset player scores\n    player1.resetScore();\n    player2.resetScore();\n    resetShipInventory();\n    if (gameContainer) {\n      gameContainer.innerHTML = '';\n      initializeGameUI('game-container');\n    }\n\n    // Update displays\n    updateStatusDisplay();\n    updateScoreDisplay();\n    updateBoardInteractivity();\n  };\n\n  //==============================================\n  // ATTACK COORDINATION METHODS\n  //==============================================\n\n  /**\r\n   * Executes a game attack at specified coordinates\r\n   * @method makeGameAttack\r\n   * @param {number} x - X coordinate to attack\r\n   * @param {number} y - Y coordinate to attack\r\n   * @returns {string} Attack result ('hit', 'miss', 'sunk', 'already attacked')\r\n   * @throws {Error} When game is not in playing state\r\n   * \r\n   * @example\r\n   * const result = game.makeGameAttack(5, 5);\r\n   */\n  var makeGameAttack = function makeGameAttack(x, y) {\n    if (gameState !== 'playing') throw new Error('Game is not currently playing');\n    var opponentBoard = currentPlayer === player1 ? player2Board : player1Board;\n    var result = currentPlayer.makeAttack(x, y, opponentBoard);\n    checkWinCondition();\n    gameState === 'playing' && switchTurns();\n    updateBoardInteractivity();\n    return result;\n  };\n\n  // Generates and executes a computer player attack\n  var generateComputerAttack = function generateComputerAttack() {\n    if (currentPlayer.type !== 'computer') throw new Error('Current player is not a computer');\n    var gameboard = player1Board;\n    var _currentPlayer$genera = currentPlayer.generateAttack(gameboard),\n      x = _currentPlayer$genera.x,\n      y = _currentPlayer$genera.y;\n    return makeGameAttack(x, y);\n  };\n\n  //==============================================\n  // SHIP PLACEMENT METHODS\n  //==============================================\n\n  /**\r\n   * Validates ship placement considering adjacency rules\r\n   * @private\r\n   * @param {Object} gameboard - Target gameboard\r\n   * @param {Object} ship - Ship object to place\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @param {string} orientation - Ship orientation\r\n   * @returns {boolean} True if placement is valid\r\n   */\n  var isValidShipPlacement = function isValidShipPlacement(gameboard, ship, x, y, orientation) {\n    var shipLength = ship.length;\n    for (var i = -1; i <= shipLength; i++) {\n      for (var j = -1; j <= 1; j++) {\n        var checkX = void 0,\n          checkY = void 0;\n        if (orientation === 'horizontal') {\n          checkX = x + j;\n          checkY = y + i;\n        } else {\n          checkX = x + i;\n          checkY = y + j;\n        }\n        if (checkX < 0 || checkX >= 10 || checkY < 0 || checkY >= 10) continue;\n        if (orientation === 'horizontal' && i >= 0 && i < shipLength && j === 0) {\n          if (checkY < 0 || checkY >= 10) return false;\n        } else if (orientation === 'vertical' && j === 0 && i >= 0 && i < shipLength) {\n          // This is a cell the ship will occupy - just check bounds  \n          if (checkX < 0 || checkX >= 10) return false;\n        } else {\n          // This is an adjacent cell - check if it has a ship\n          if (gameboard.getShipAt(checkX, checkY) !== null) return false; // Adjacent ship found\n        }\n      }\n    }\n    return true;\n  };\n\n  // Places ships randomly on a gameboard for setup\n  var placeShipsRandomly = function placeShipsRandomly(gameboard) {\n    var shipTypes = Object.keys(SHIP_TYPES);\n    shipTypes.forEach(function (typeKey) {\n      var placed = false;\n      while (!placed) {\n        var orientation = Math.random() < 0.5 ? 'horizontal' : 'vertical';\n        var row = Math.floor(Math.random() * gameboard.getGridSize());\n        var col = Math.floor(Math.random() * gameboard.getGridSize());\n        try {\n          var ship = Ship(typeKey);\n          if (isValidShipPlacement(gameboard, ship, row, col, orientation)) {\n            gameboard.placeShip(ship, row, col, orientation);\n            placed = true;\n          }\n        } catch (error) {\n          // console.error(`Error placing ship ${shipType.name}:`, error);\n        }\n      }\n      if (!placed) {\n        var fallbackPlaced = false;\n        while (!fallbackPlaced) {\n          var _orientation = Math.random() < 0.5 ? 'horizontal' : 'vertical';\n          var _row = Math.floor(Math.random() * gameboard.getGridSize());\n          var _col = Math.floor(Math.random() * gameboard.getGridSize());\n          try {\n            var _ship = Ship(typeKey);\n            gameboard.placeShip(_ship, _row, _col, _orientation);\n            fallbackPlaced = true;\n          } catch (error) {}\n        }\n      }\n    });\n  };\n\n  // Shuffles player ships with random placement\n  var shuffleShips = function shuffleShips() {\n    if (gameState !== 'not playing') return;\n    player1Board.resetBoard();\n    resetShipInventory();\n    placeShipsRandomly(player1Board);\n    player1Board.updateDisplay();\n    markAllShipsAsPlaced();\n  };\n\n  //==============================================\n  // SHIP INVENTORY MANAGEMENT\n  //==============================================\n\n  // Resets ship inventory UI to initial state\n  var resetShipInventory = function resetShipInventory() {\n    document.querySelectorAll('.ship-item').forEach(function (item) {\n      item.classList.remove('selected', 'placed');\n    });\n    selectedShip = null;\n    isPlacingShip = false;\n  };\n\n  // Marks all ships as placed in the UI\n  var markAllShipsAsPlaced = function markAllShipsAsPlaced() {\n    document.querySelectorAll('.ship-item').forEach(function (item) {\n      item.classList.add('placed');\n    });\n  };\n\n  // Selects a ship type for manual placement\n  var selectShipForPlacement = function selectShipForPlacement(typeKey, shipType) {\n    // Deselect previously selected ship\n    document.querySelectorAll('.ship-item').forEach(function (item) {\n      item.classList.remove('selected');\n    });\n\n    // Mark current selection\n    document.querySelector(\"[data-type=\\\"\".concat(typeKey, \"\\\"]\")).classList.add('selected');\n\n    // Set selected ship for placement\n    selectedShip = _objectSpread({\n      typeKey: typeKey\n    }, shipType);\n    isPlacingShip = true;\n  };\n\n  // Rotates the current ship orientation\n  var rotateShip = function rotateShip() {\n    currentOrientation = currentOrientation === 'horizontal' ? 'vertical' : 'horizontal';\n    console.log(\"Ship orientation changed to: \".concat(currentOrientation));\n  };\n\n  //==============================================\n  // DOM INITIALIZATION METHODS\n  //==============================================\n\n  /**\r\n   * Initializes the complete game UI in the specified container\r\n   * @method initializeGameUI\r\n   * @param {string} containerId - ID of the DOM container element\r\n   * @returns {void}\r\n   * @throws {Error} When container is not found\r\n   * \r\n   * @example\r\n   * game.initializeGameUI('game-container');\r\n   * // Creates complete game interface with boards, controls, etc.\r\n   */\n  var initializeGameUI = function initializeGameUI(containerId) {\n    gameContainer = document.getElementById(containerId);\n    if (!gameContainer) throw new Error(\"Container \".concat(containerId, \" not found\"));\n\n    // Create game layout\n    gameContainer.innerHTML = \"\\n            <h1 class=\\\"game-title\\\">Battlesh<span class=\\\"material-symbols-outlined\\\">anchor</span>p</h1>\\n            <div class=\\\"game-header\\\">\\n                <div class=\\\"player-info\\\">\\n                    <h3>\".concat(player1.name, \"</h3>\\n                    <span class=\\\"score\\\" id=\\\"player1-score\\\">0</span>\\n                </div>\\n                <div class=\\\"game-status\\\" id=\\\"game-status\\\">Place your ships to start the game</div>\\n                <div class=\\\"player-info\\\">\\n                    <h3>\").concat(player2.name, \"</h3>\\n                    <span class=\\\"score\\\" id=\\\"player2-score\\\">0</span>\\n                </div>\\n            </div>\\n            <div class=\\\"game-boards\\\">\\n                <div class=\\\"board-container\\\">\\n                    <h4>Your Board</h4>\\n                    <div id=\\\"player1-board\\\"></div>\\n                </div>\\n                <div class=\\\"board-container\\\">\\n                    <h4>Computer's Board</h4>\\n                    <div id=\\\"player2-board\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"game-controls\\\">\\n                <button id=\\\"start-game\\\"><span class=\\\"material-symbols-outlined\\\">play_arrow</span></button>\\n                <button id=\\\"reset-game\\\"><span class=\\\"material-symbols-outlined\\\">laps</span></button>\\n                <button id=\\\"shuffle-ships\\\"><span class=\\\"material-symbols-outlined\\\">shuffle</span></button>\\n                <button id=\\\"rotate-ship\\\"><span class=\\\"material-symbols-outlined\\\">cached</span></button>\\n            </div>\\n            <div class=\\\"ship-inventory\\\">\\n                <h4>Select a ship to place</h4>\\n                <div id=\\\"ship-list\\\">\\n                </div>             \\n            </div>\\n        \");\n\n    // Reference DOM elements\n    statusElement = document.getElementById('game-status');\n    player1ScoreElement = document.getElementById('player1-score');\n    player2ScoreElement = document.getElementById('player2-score');\n    player1Board.createGrid('player1-board', true);\n    player2Board.createGrid('player2-board', false);\n\n    // Create ship inventory\n    setupShipInventory();\n\n    // Event listeners\n    setupEventListeners();\n    updateStatusDisplay();\n  };\n\n  // Creates the ship inventory UI with selectable ships\n  var setupShipInventory = function setupShipInventory() {\n    var shipList = document.getElementById('ship-list');\n    if (!shipList) throw new Error('Ship list container not found');\n    Object.keys(SHIP_TYPES).forEach(function (typeKey) {\n      var shipType = SHIP_TYPES[typeKey];\n      var shipItem = document.createElement('div');\n      shipItem.classList.add('ship-item');\n      shipItem.dataset.type = typeKey;\n      var shipboxes = Array.from({\n        length: shipType.length\n      }, function () {\n        return \"<div class=\\\"ship-box\\\" style=\\\"background-color: \".concat(shipType.color, \"\\\"></div>\");\n      }).join('');\n      shipItem.innerHTML = \"\\n                <p>\".concat(shipType.name, \"</p>\\n                <div class=\\\"ship-boxes\\\">\").concat(shipboxes, \"</div>\\n            \");\n      shipItem.addEventListener('click', function () {\n        selectShipForPlacement(typeKey, shipType);\n      });\n      shipList.appendChild(shipItem);\n    });\n  };\n\n  // Sets up all game event listeners\n  var setupEventListeners = function setupEventListeners() {\n    document.addEventListener('boardAttack', handleBoardAttack);\n    document.addEventListener('boardHover', handleBoardHover);\n    document.addEventListener('boardLeave', handleBoardLeave);\n    document.addEventListener('shipPlacement', handleShipPlacement);\n    document.getElementById('start-game').addEventListener('click', startGame);\n    document.getElementById('reset-game').addEventListener('click', resetGame);\n    document.getElementById('shuffle-ships').addEventListener('click', shuffleShips);\n    document.getElementById('rotate-ship').addEventListener('click', rotateShip);\n  };\n\n  //==============================================\n  // DOM EVENT HANDLERS\n  //==============================================\n\n  // Handles board hover events for ship placement preview\n  var handleBoardHover = function handleBoardHover(event) {\n    if (!isPlacingShip || !selectedShip) return;\n    var _event$detail = event.detail,\n      row = _event$detail.row,\n      col = _event$detail.col,\n      gameboard = _event$detail.gameboard;\n    if (!isPlayerBoard(gameboard)) return;\n    showShipPreview(row, col, gameboard);\n  };\n\n  // Handles board leave events for ship placement preview\n  var handleBoardLeave = function handleBoardLeave(event) {\n    if (!isPlacingShip || !selectedShip) return;\n    var gameboard = event.detail.gameboard;\n    if (!isPlayerBoard(gameboard)) return;\n    clearShipPreview(gameboard);\n  };\n\n  // Handles ship placement click events\n  var handleShipPlacement = function handleShipPlacement(event) {\n    if (!isPlacingShip || !selectedShip) return;\n    var _event$detail2 = event.detail,\n      row = _event$detail2.row,\n      col = _event$detail2.col,\n      gameboard = _event$detail2.gameboard;\n    if (!isPlayerBoard(gameboard)) return;\n    try {\n      var ship = Ship(selectedShip.typeKey);\n      gameboard.placeShip(ship, row, col, currentOrientation);\n      clearShipPreview(gameboard);\n      var shipElement = document.querySelector(\"[data-type=\\\"\".concat(selectedShip.typeKey, \"\\\"]\"));\n      if (shipElement) {\n        shipElement.classList.add('placed');\n      }\n      selectedShip = null;\n      isPlacingShip = false;\n      player1Board.updateDisplay();\n    } catch (error) {\n      console.error('Error placing ship:', error);\n      updateStatusDisplay(error.message);\n      clearShipPreview(gameboard);\n    }\n  };\n\n  // Handles board attack click events\n  var handleBoardAttack = function handleBoardAttack(event) {\n    var _event$detail3 = event.detail,\n      row = _event$detail3.row,\n      col = _event$detail3.col,\n      gameboard = _event$detail3.gameboard;\n    if (gameState !== 'playing') {\n      updateStatusDisplay('Game is not currently playing');\n      return;\n    }\n    if (gameboard === player1Board) {\n      updateStatusDisplay('Cannot attack your own board');\n      return;\n    }\n    try {\n      var result = makeGameAttack(row, col);\n      if (winner) {\n        updateStatusDisplay();\n        return;\n      }\n      updateStatusDisplay(\"\".concat(getGameState().currentPlayer.name, \" \").concat(result, \"!\"));\n      updateScoreDisplay();\n      if (getGameState().currentPlayer.type === 'computer' && gameState === 'playing') {\n        setTimeout(function () {\n          var computerResult = generateComputerAttack();\n          if (winner) {\n            updateStatusDisplay();\n            return;\n          }\n          updateStatusDisplay(\"Computer \".concat(computerResult, \"!\"));\n          updateScoreDisplay();\n        }, 1000);\n      }\n    } catch (error) {\n      updateStatusDisplay(error.message);\n    }\n  };\n\n  //==============================================\n  // SHIP PREVIEW METHODS\n  //==============================================\n\n  /**\r\n   * Shows ship placement preview on hover\r\n   * @private\r\n   * @param {number} row - Row coordinate\r\n   * @param {number} col - Column coordinate\r\n   * @param {Object} gameboard - Target gameboard\r\n   * @returns {void}\r\n   */\n  var showShipPreview = function showShipPreview(row, col, gameboard) {\n    clearShipPreview(gameboard);\n    var coordinates = [];\n    var hasOverlap = false;\n\n    // Calculate ship coordinates based on orientation\n    for (var i = 0; i < selectedShip.length; i++) {\n      var x = currentOrientation === 'vertical' ? row + i : row;\n      var y = currentOrientation === 'horizontal' ? col + i : col;\n      coordinates.push({\n        x: x,\n        y: y\n      });\n\n      // Check if coordinates are valid and not overlapping\n      if (x >= 10 || y >= 10 || x < 0 || y < 0) hasOverlap = true;else if (gameboard.getShipAt(x, y) !== null) hasOverlap = true;\n    }\n    coordinates.forEach(function (_ref) {\n      var x = _ref.x,\n        y = _ref.y;\n      if (x >= 0 && x < 10 && y >= 0 && y < 10) {\n        var cell = document.querySelector(\"#player1-board [data-row=\\\"\".concat(x, \"\\\"][data-col=\\\"\").concat(y, \"\\\"]\"));\n        if (cell) {\n          cell.classList.add('ship-preview');\n          if (hasOverlap) cell.classList.add('ship-preview-invalid');else {\n            cell.style.backgroundColor = selectedShip.color;\n            cell.style.opacity = '0.7';\n          }\n        }\n      }\n    });\n  };\n\n  // Clears ship placement preview\n  var clearShipPreview = function clearShipPreview(gameboard) {\n    var previewCells = document.querySelectorAll('#player1-board .ship-preview');\n    previewCells.forEach(function (cell) {\n      cell.classList.remove('ship-preview', 'ship-preview-invalid');\n      cell.style.backgroundColor = '';\n      cell.style.opacity = '';\n    });\n    player1Board.updateDisplay();\n  };\n\n  //==============================================\n  // UTILITY METHODS\n  //==============================================\n\n  // Checks if a gameboard belongs to the player\n  var isPlayerBoard = function isPlayerBoard(gameboard) {\n    // Compare the gameboard methods to determine if it's player1Board\n    return gameboard === player1Board || gameboard.getGridSize && gameboard.getGridSize() === player1Board.getGridSize();\n  };\n\n  // Updates board interactivity based on current game state and player\n  var updateBoardInteractivity = function updateBoardInteractivity() {\n    if (gameState !== 'playing') {\n      player2Board.disableBoard();\n      return;\n    }\n    if (currentPlayer === player1) player2Board.enableBoard();else player2Board.disableBoard();\n  };\n\n  //==============================================\n  // DISPLAY UPDATE METHODS\n  //==============================================\n\n  /**\r\n   * Updates the game status display with current information\r\n   * @method updateStatusDisplay\r\n   * @param {string} [message] - Optional custom message to display\r\n   * @returns {void}\r\n   * \r\n   * @example\r\n   * game.updateStatusDisplay('Player hit!');\r\n   * game.updateStatusDisplay(); // Shows default status based on game state\r\n   */\n  var updateStatusDisplay = function updateStatusDisplay(message) {\n    if (!statusElement) return;\n    if (message) statusElement.textContent = message;else {\n      if (winner) statusElement.textContent = \"\\uD83C\\uDF89 \".concat(winner.name, \" wins! \\uD83C\\uDF89\");else if (gameState === 'playing') statusElement.textContent = \"\".concat(getGameState().currentPlayer.name, \"'s turn\");else statusElement.textContent = 'Place your ships to start the game';\n    }\n  };\n\n  /**\r\n   * Updates the score display for both players\r\n   * @method updateScoreDisplay\r\n   * @returns {void}\r\n   * \r\n   * @example\r\n   * game.updateScoreDisplay(); // Refreshes both player scores\r\n   */\n  var updateScoreDisplay = function updateScoreDisplay() {\n    if (player1ScoreElement) player1ScoreElement.textContent = player1.score;\n    if (player2ScoreElement) player2ScoreElement.textContent = player2.score;\n  };\n\n  // Return public API\n  return {\n    getPlayer1: getPlayer1,\n    getPlayer2: getPlayer2,\n    getPlayer1Board: getPlayer1Board,\n    getPlayer2Board: getPlayer2Board,\n    startGame: startGame,\n    getGameState: getGameState,\n    generateComputerAttack: generateComputerAttack,\n    makeGameAttack: makeGameAttack,\n    resetGame: resetGame,\n    initializeGameUI: initializeGameUI,\n    updateStatusDisplay: updateStatusDisplay,\n    updateScoreDisplay: updateScoreDisplay\n  };\n}\n;// ./src/modules/player/player.js\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n/**\r\n * Creates a player object with attack capabilities and AI logic for computer players\r\n * @function Player\r\n * @param {string} name - The player's display name\r\n * @param {string} type - Player type ('human' or 'computer')\r\n * @returns {Object} Immutable player object with attack methods and AI logic\r\n * @throws {Error} When name is invalid or type is not 'human' or 'computer'\r\n * \r\n * @example\r\n * const humanPlayer = Player('John', 'human');\r\n * const result = humanPlayer.makeAttack(5, 5, opponentBoard);\r\n * \r\n * @example\r\n * const computerPlayer = Player('AI', 'computer');\r\n * const coords = computerPlayer.generateAttack(opponentBoard);\r\n * const result = computerPlayer.makeAttack(coords.x, coords.y, opponentBoard);\r\n */\nfunction Player(name) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'human';\n  // Input validation\n  if (!name || typeof name !== 'string') throw new Error('Invalid player name');\n  if (type !== 'human' && type !== 'computer') throw new Error('Invalid player type');\n\n  // Private state\n  var score = 0;\n\n  // Computer AI state\n  var lastHit = null;\n  var targetQueue = [];\n  var isHunting = false;\n  var hitHistory = [];\n  var huntDirection = null;\n\n  // Constants\n  var GRID_SIZE = 10;\n\n  /**\r\n   * Executes an attack on the opponent's gameboard and updates player score\r\n   * @method makeAttack\r\n   * @param {number} x - X coordinate to attack\r\n   * @param {number} y - Y coordinate to attack\r\n   * @param {Object} gameboard - Target gameboard object\r\n   * @returns {string} Attack result ('hit', 'miss', 'sunk', 'already attacked')\r\n   * @throws {Error} When coordinates are invalid or gameboard is missing\r\n   * \r\n   * @example\r\n   * const result = player.makeAttack(3, 4, enemyBoard);\r\n   * if (result === 'hit') {\r\n   *   console.log('Direct hit!');\r\n   * }\r\n   */\n  var makeAttack = function makeAttack(x, y, gameboard) {\n    var result = gameboard.receiveAttack(x, y);\n\n    // Update AI state based on attack result\n    if (type === 'computer') {\n      if (result === 'hit') {\n        var currentHit = {\n          x: x,\n          y: y\n        };\n        lastHit = currentHit;\n        hitHistory.push(currentHit);\n        isHunting = true;\n\n        // If we have multiple hits, try to determine line direction\n        if (hitHistory.length === 1) {\n          // First hit, generate surrounding targets\n          var surrounding = getSurroundingCoordinates(x, y);\n          targetQueue = surrounding.filter(function (coord) {\n            return !gameboard.isAttacked(coord.x, coord.y);\n          });\n        } else if (hitHistory.length === 2) {\n          var direction = determineDirection(hitHistory[0], hitHistory[1]);\n          if (direction) {\n            huntDirection = direction;\n            targetQueue = [];\n            var forwardTargets = getDirectionalTargets(currentHit, direction, gameboard);\n            var backwardTargets = getDirectionalTargets(hitHistory[0], {\n              dx: -direction.dx,\n              dy: -direction.dy\n            }, gameboard);\n            targetQueue = [].concat(_toConsumableArray(forwardTargets), _toConsumableArray(backwardTargets)).filter(function (coord) {\n              return !gameboard.isAttacked(coord.x, coord.y);\n            });\n          }\n        } else {\n          if (huntDirection) {\n            var newTargets = getDirectionalTargets(currentHit, huntDirection, gameboard);\n            targetQueue = [].concat(_toConsumableArray(targetQueue), _toConsumableArray(newTargets)).filter(function (coord) {\n              return !gameboard.isAttacked(coord.x, coord.y);\n            });\n          }\n        }\n      } else if (result === 'sunk') {\n        // Ship sunk, reset hunting state\n        isHunting = false;\n        lastHit = null;\n        targetQueue = [];\n        hitHistory = [];\n        huntDirection = null;\n      }\n    }\n    if (result === 'hit' || result === 'sunk') score++;\n    return result;\n  };\n\n  /**\r\n   * Generates attack coordinates for the player (random for human, AI-driven for computer)\r\n   * @method generateAttack\r\n   * @param {Object} gameboard - Target gameboard to analyze\r\n   * @returns {{x: number, y: number}} Coordinates to attack\r\n   * @throws {Error} When gameboard is invalid\r\n   * \r\n   * @example\r\n   * const coords = computerPlayer.generateAttack(playerBoard);\r\n   * const result = computerPlayer.makeAttack(coords.x, coords.y, playerBoard);\r\n   */\n  var generateAttack = function generateAttack(gameboard) {\n    // Smart targeting for AI\n    if (type === 'computer' && isHunting && targetQueue.length > 0) {\n      // Remove invalid targets - those already attacked\n      targetQueue = targetQueue.filter(function (target) {\n        return !gameboard.isAttacked(target.x, target.y);\n      });\n      if (targetQueue.length > 0) return targetQueue.shift(); // Return first target in queue\n      else {\n        isHunting = false;\n        lastHit = null;\n        hitHistory = [];\n        huntDirection = null;\n      }\n    }\n\n    // Fallback to random attack\n    var x, y;\n    do {\n      x = Math.floor(Math.random() * GRID_SIZE);\n      y = Math.floor(Math.random() * GRID_SIZE);\n    } while (gameboard.isAttacked(x, y));\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  //==============================================\n  // AI HELPER FUNCTIONS\n  //==============================================\n  /**\r\n   * Gets surrounding coordinates for a given position\r\n   * @private\r\n   * @param {number} x - X coordinate\r\n   * @param {number} y - Y coordinate\r\n   * @returns {Array<{x: number, y: number}>} Array of valid surrounding coordinates\r\n   */\n  var getSurroundingCoordinates = function getSurroundingCoordinates(x, y) {\n    var directions = [{\n      x: x - 1,\n      y: y\n    },\n    // Up\n    {\n      x: x + 1,\n      y: y\n    },\n    // Down\n    {\n      x: x,\n      y: y - 1\n    },\n    // Left\n    {\n      x: x,\n      y: y + 1\n    } // Right\n    ];\n    return directions.filter(function (coord) {\n      return coord.x >= 0 && coord.x < GRID_SIZE && coord.y >= 0 && coord.y < GRID_SIZE;\n    });\n  };\n\n  /**\r\n   * Gets targets in a specific direction from a starting hit\r\n   * @private\r\n   * @param {Object} startHit - Starting hit coordinates\r\n   * @param {Object} direction - Direction object with dx, dy properties\r\n   * @param {Object} gameboard - Target gameboard\r\n   * @returns {Array<{x: number, y: number}>} Array of target coordinates\r\n   */\n  var getDirectionalTargets = function getDirectionalTargets(startHit, direction, gameboard) {\n    var targets = [];\n    var currentX = startHit.x;\n    var currentY = startHit.y;\n    while (true) {\n      currentX += direction.dx;\n      currentY += direction.dy;\n      if (currentX < 0 || currentX >= GRID_SIZE || currentY < 0 || currentY >= GRID_SIZE) break;\n      if (gameboard.isAttacked(currentX, currentY)) break; // Stop if already attacked\n      targets.push({\n        x: currentX,\n        y: currentY\n      });\n    }\n    return targets;\n  };\n\n  /**\r\n   * Determines direction between two hits\r\n   * @private\r\n   * @param {Object} hit1 - First hit coordinates\r\n   * @param {Object} hit2 - Second hit coordinates\r\n   * @returns {Object|null} Direction object or null if not a valid line\r\n   */\n  var determineDirection = function determineDirection(hit1, hit2) {\n    if (hit1.x === hit2.x) return hit2.y > hit1.y ? {\n      dx: 0,\n      dy: 1\n    } : {\n      dx: 0,\n      dy: -1\n    }; // Vertical\n    else if (hit1.y === hit2.y) return hit2.x > hit1.x ? {\n      dx: 1,\n      dy: 0\n    } : {\n      dx: -1,\n      dy: 0\n    }; // Horizontal\n    return null; // Not a valid line\n  };\n\n  // Public methods\n  var resetScore = function resetScore() {\n    score = 0;\n    lastHit = null;\n    targetQueue = [];\n    isHunting = false;\n    hitHistory = [];\n    huntDirection = null;\n  };\n\n  // Return the public API\n  return {\n    name: name,\n    type: type,\n    get score() {\n      return score;\n    },\n    resetScore: resetScore,\n    makeAttack: makeAttack,\n    generateAttack: generateAttack,\n    // Computer-only state:\n    get lastHit() {\n      return lastHit;\n    },\n    get targetQueue() {\n      return _toConsumableArray(targetQueue);\n    },\n    get isHunting() {\n      return isHunting;\n    },\n    get hitHistory() {\n      return _toConsumableArray(hitHistory);\n    }\n  };\n}\n;// ./src/index.js\n// Import CSS files\n\n\n\n\n// Initialize game when DOM is ready\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Create players\n  var player1 = Player('Player 1', 'human');\n  var player2 = Player('Player 2', 'computer');\n\n  // Create game\n  var game = Game(player1, player2);\n\n  // Initialize game UI\n  game.initializeGameUI('game-container');\n  window.game = game; // Expose game for debugging\n  console.log('Game initialized:', game);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///871\n\n}")},993:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* ==========================================================================\r\n   CSS RESET\r\n   ========================================================================== */\r\n/* 1. Use a more-intuitive box-sizing model */\r\n*, *::before, *::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 2. Remove default margin */\r\n* {\r\n  margin: 0;\r\n}\r\n\r\n/* 3. Enable keyword animations */\r\n@media (prefers-reduced-motion: no-preference) {\r\n  html {\r\n    interpolate-size: allow-keywords;\r\n  }\r\n}\r\n\r\nbody {\r\n  /* 4. Add accessible line-height */\r\n  line-height: 1.5;\r\n  /* 5. Improve text rendering */\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n/* 6. Improve media defaults */\r\nimg, picture, video, canvas, svg {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\n\r\n/* 7. Inherit fonts for form controls */\r\ninput, button, textarea, select {\r\n  font: inherit;\r\n}\r\n\r\n/* 8. Avoid text overflows */\r\np, h1, h2, h3, h4, h5, h6 {\r\n  overflow-wrap: break-word;\r\n}\r\n\r\n/* 9. Improve line wrapping */\r\np {\r\n  text-wrap: pretty;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n  text-wrap: balance;\r\n}\r\n\r\n/*\r\n  10. Create a root stacking context\r\n*/\r\n#root, #__next {\r\n  isolation: isolate;\r\n}`, "",{"version":3,"sources":["webpack://./src/styles/reset.css"],"names":[],"mappings":"AAAA;;+EAE+E;AAC/E,6CAA6C;AAC7C;EACE,sBAAsB;AACxB;;AAEA,6BAA6B;AAC7B;EACE,SAAS;AACX;;AAEA,iCAAiC;AACjC;EACE;IACE,gCAAgC;EAClC;AACF;;AAEA;EACE,kCAAkC;EAClC,gBAAgB;EAChB,8BAA8B;EAC9B,mCAAmC;AACrC;;AAEA,8BAA8B;AAC9B;EACE,cAAc;EACd,eAAe;AACjB;;AAEA,uCAAuC;AACvC;EACE,aAAa;AACf;;AAEA,4BAA4B;AAC5B;EACE,yBAAyB;AAC3B;;AAEA,6BAA6B;AAC7B;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;AACpB;;AAEA;;CAEC;AACD;EACE,kBAAkB;AACpB","sourcesContent":["/* ==========================================================================\\r\\n   CSS RESET\\r\\n   ========================================================================== */\\r\\n/* 1. Use a more-intuitive box-sizing model */\\r\\n*, *::before, *::after {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* 2. Remove default margin */\\r\\n* {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n/* 3. Enable keyword animations */\\r\\n@media (prefers-reduced-motion: no-preference) {\\r\\n  html {\\r\\n    interpolate-size: allow-keywords;\\r\\n  }\\r\\n}\\r\\n\\r\\nbody {\\r\\n  /* 4. Add accessible line-height */\\r\\n  line-height: 1.5;\\r\\n  /* 5. Improve text rendering */\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n\\r\\n/* 6. Improve media defaults */\\r\\nimg, picture, video, canvas, svg {\\r\\n  display: block;\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n/* 7. Inherit fonts for form controls */\\r\\ninput, button, textarea, select {\\r\\n  font: inherit;\\r\\n}\\r\\n\\r\\n/* 8. Avoid text overflows */\\r\\np, h1, h2, h3, h4, h5, h6 {\\r\\n  overflow-wrap: break-word;\\r\\n}\\r\\n\\r\\n/* 9. Improve line wrapping */\\r\\np {\\r\\n  text-wrap: pretty;\\r\\n}\\r\\nh1, h2, h3, h4, h5, h6 {\\r\\n  text-wrap: balance;\\r\\n}\\r\\n\\r\\n/*\\r\\n  10. Create a root stacking context\\r\\n*/\\r\\n#root, #__next {\\r\\n  isolation: isolate;\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsT0FBTyx3RkFBd0YsT0FBTyxhQUFhLE1BQU0sWUFBWSxPQUFPLFlBQVksTUFBTSxVQUFVLE1BQU0sWUFBWSxNQUFNLEtBQUssWUFBWSxNQUFNLE1BQU0sS0FBSyxZQUFZLGFBQWEsYUFBYSxhQUFhLE9BQU8sWUFBWSxNQUFNLFVBQVUsVUFBVSxPQUFPLFlBQVksTUFBTSxVQUFVLE1BQU0sWUFBWSxNQUFNLFlBQVksT0FBTyxZQUFZLE1BQU0sWUFBWSxNQUFNLEtBQUssWUFBWSxPQUFPLE1BQU0sS0FBSyxLQUFLLFlBQVkseVJBQXlSLDZCQUE2QixLQUFLLDZDQUE2QyxnQkFBZ0IsS0FBSyw4RkFBOEYsWUFBWSx5Q0FBeUMsT0FBTyxLQUFLLGNBQWMsZ0VBQWdFLCtFQUErRSxLQUFLLDZFQUE2RSxxQkFBcUIsc0JBQXNCLEtBQUsscUZBQXFGLG9CQUFvQixLQUFLLG9FQUFvRSxnQ0FBZ0MsS0FBSyw2Q0FBNkMsd0JBQXdCLEtBQUssNEJBQTRCLHlCQUF5QixLQUFLLDRFQUE0RSx5QkFBeUIsS0FBSyxtQkFBbUI7QUFDNXZEO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtYmF0dGxlc2hpcC8uL3NyYy9zdHlsZXMvcmVzZXQuY3NzPzk3YWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIENTUyBSRVNFVFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4vKiAxLiBVc2UgYSBtb3JlLWludHVpdGl2ZSBib3gtc2l6aW5nIG1vZGVsICovXHJcbiosICo6OmJlZm9yZSwgKjo6YWZ0ZXIge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi8qIDIuIFJlbW92ZSBkZWZhdWx0IG1hcmdpbiAqL1xyXG4qIHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qIDMuIEVuYWJsZSBrZXl3b3JkIGFuaW1hdGlvbnMgKi9cclxuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiBuby1wcmVmZXJlbmNlKSB7XHJcbiAgaHRtbCB7XHJcbiAgICBpbnRlcnBvbGF0ZS1zaXplOiBhbGxvdy1rZXl3b3JkcztcclxuICB9XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIC8qIDQuIEFkZCBhY2Nlc3NpYmxlIGxpbmUtaGVpZ2h0ICovXHJcbiAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAvKiA1LiBJbXByb3ZlIHRleHQgcmVuZGVyaW5nICovXHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbn1cclxuXHJcbi8qIDYuIEltcHJvdmUgbWVkaWEgZGVmYXVsdHMgKi9cclxuaW1nLCBwaWN0dXJlLCB2aWRlbywgY2FudmFzLCBzdmcge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuLyogNy4gSW5oZXJpdCBmb250cyBmb3IgZm9ybSBjb250cm9scyAqL1xyXG5pbnB1dCwgYnV0dG9uLCB0ZXh0YXJlYSwgc2VsZWN0IHtcclxuICBmb250OiBpbmhlcml0O1xyXG59XHJcblxyXG4vKiA4LiBBdm9pZCB0ZXh0IG92ZXJmbG93cyAqL1xyXG5wLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcclxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG59XHJcblxyXG4vKiA5LiBJbXByb3ZlIGxpbmUgd3JhcHBpbmcgKi9cclxucCB7XHJcbiAgdGV4dC13cmFwOiBwcmV0dHk7XHJcbn1cclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XHJcbiAgdGV4dC13cmFwOiBiYWxhbmNlO1xyXG59XHJcblxyXG4vKlxyXG4gIDEwLiBDcmVhdGUgYSByb290IHN0YWNraW5nIGNvbnRleHRcclxuKi9cclxuI3Jvb3QsICNfX25leHQge1xyXG4gIGlzb2xhdGlvbjogaXNvbGF0ZTtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9yZXNldC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7OytFQUUrRTtBQUMvRSw2Q0FBNkM7QUFDN0M7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUEsNkJBQTZCO0FBQzdCO0VBQ0UsU0FBUztBQUNYOztBQUVBLGlDQUFpQztBQUNqQztFQUNFO0lBQ0UsZ0NBQWdDO0VBQ2xDO0FBQ0Y7O0FBRUE7RUFDRSxrQ0FBa0M7RUFDbEMsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtFQUM5QixtQ0FBbUM7QUFDckM7O0FBRUEsOEJBQThCO0FBQzlCO0VBQ0UsY0FBYztFQUNkLGVBQWU7QUFDakI7O0FBRUEsdUNBQXVDO0FBQ3ZDO0VBQ0UsYUFBYTtBQUNmOztBQUVBLDRCQUE0QjtBQUM1QjtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQSw2QkFBNkI7QUFDN0I7RUFDRSxpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTs7Q0FFQztBQUNEO0VBQ0Usa0JBQWtCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XFxyXFxuICAgQ1NTIFJFU0VUXFxyXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXHJcXG4vKiAxLiBVc2UgYSBtb3JlLWludHVpdGl2ZSBib3gtc2l6aW5nIG1vZGVsICovXFxyXFxuKiwgKjo6YmVmb3JlLCAqOjphZnRlciB7XFxyXFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbn1cXHJcXG5cXHJcXG4vKiAyLiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4gKi9cXHJcXG4qIHtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXFxyXFxuLyogMy4gRW5hYmxlIGtleXdvcmQgYW5pbWF0aW9ucyAqL1xcclxcbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogbm8tcHJlZmVyZW5jZSkge1xcclxcbiAgaHRtbCB7XFxyXFxuICAgIGludGVycG9sYXRlLXNpemU6IGFsbG93LWtleXdvcmRzO1xcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gIC8qIDQuIEFkZCBhY2Nlc3NpYmxlIGxpbmUtaGVpZ2h0ICovXFxyXFxuICBsaW5lLWhlaWdodDogMS41O1xcclxcbiAgLyogNS4gSW1wcm92ZSB0ZXh0IHJlbmRlcmluZyAqL1xcclxcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxyXFxufVxcclxcblxcclxcbi8qIDYuIEltcHJvdmUgbWVkaWEgZGVmYXVsdHMgKi9cXHJcXG5pbWcsIHBpY3R1cmUsIHZpZGVvLCBjYW52YXMsIHN2ZyB7XFxyXFxuICBkaXNwbGF5OiBibG9jaztcXHJcXG4gIG1heC13aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuLyogNy4gSW5oZXJpdCBmb250cyBmb3IgZm9ybSBjb250cm9scyAqL1xcclxcbmlucHV0LCBidXR0b24sIHRleHRhcmVhLCBzZWxlY3Qge1xcclxcbiAgZm9udDogaW5oZXJpdDtcXHJcXG59XFxyXFxuXFxyXFxuLyogOC4gQXZvaWQgdGV4dCBvdmVyZmxvd3MgKi9cXHJcXG5wLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcXHJcXG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XFxyXFxufVxcclxcblxcclxcbi8qIDkuIEltcHJvdmUgbGluZSB3cmFwcGluZyAqL1xcclxcbnAge1xcclxcbiAgdGV4dC13cmFwOiBwcmV0dHk7XFxyXFxufVxcclxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xcclxcbiAgdGV4dC13cmFwOiBiYWxhbmNlO1xcclxcbn1cXHJcXG5cXHJcXG4vKlxcclxcbiAgMTAuIENyZWF0ZSBhIHJvb3Qgc3RhY2tpbmcgY29udGV4dFxcclxcbiovXFxyXFxuI3Jvb3QsICNfX25leHQge1xcclxcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///993\n\n}')}},__webpack_module_cache__={};function __webpack_require__(Q){var B=__webpack_module_cache__[Q];if(void 0!==B)return B.exports;var I=__webpack_module_cache__[Q]={id:Q,exports:{}};return __webpack_modules__[Q](I,I.exports,__webpack_require__),I.exports}__webpack_require__.n=Q=>{var B=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(B,{a:B}),B},__webpack_require__.d=(Q,B)=>{for(var I in B)__webpack_require__.o(B,I)&&!__webpack_require__.o(Q,I)&&Object.defineProperty(Q,I,{enumerable:!0,get:B[I]})},__webpack_require__.o=(Q,B)=>Object.prototype.hasOwnProperty.call(Q,B),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(871)})();